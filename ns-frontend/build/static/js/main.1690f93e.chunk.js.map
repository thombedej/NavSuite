{"version":3,"sources":["components/NavBar/NavBar.js","Leaflet.Edgemarker.js","components/Pages/Page.js","components/Loadable.js","components/Pages/GetData/GetData.js","components/Widgets/Widget.js","components/Widgets/NMEAInfoWidget/NMEAInfoWidget.js","components/Widgets/NMEAInfoWidget/InfoData.js","components/Pages/Dashboard/Messages.js","components/Pages/Dashboard/SatelliteMap.js","components/Pages/Dashboard/FileStream.js","components/Widgets/RadarWidget/RadarWidget.js","components/Widgets/StatusWidget/StatusWidget.js","components/Widgets/MapWidget/MinimapControl.js","components/Widgets/MapWidget/Map.js","components/Widgets/MapWidget/MapWidget.js","components/Widgets/SatWidget/SatWidget.js","components/Widgets/ChartWidget/Chart.js","components/Widgets/ChartWidget/Chart2.js","components/Widgets/ChartWidget/ChartWidget.js","components/Pages/Dashboard/Analysis.js","components/Pages/Dashboard/Settings.js","components/Pages/Dashboard/Dashboard.js","components/Pages/About/About.js","components/Animated.js","components/Pages/Landing/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","React","useState","expanded","setExpanded","anim","setAnim","setSelected","navButton","page","exact","to","path","className","style","isActive","marginBottom","height","width","borderRadius","backgroundColor","display","justifyContent","alignItems","position","outlineStyle","outlineWidth","outlineColor","icon","Fade","in","timeout","color","marginLeft","label","Card","onTransitionEnd","e","transition","boxShadow","onMouseEnter","onMouseLeave","onClick","padding","fontSize","flexDirection","size","map","L","classToExtend","version","charAt","EdgeMarker","extend","options","distanceOpacity","distanceOpacityFactor","layerGroup","rotateIcons","findEdge","bounds","getSize","iconUrl","Icon","Default","imagePath","clickable","iconSize","iconAnchor","initialize","setOptions","this","addTo","_map","_getFeatures","out","l","_layers","getLatLng","push","on","_addEdgeMarkers","addLayer","destroy","_borderMarkerLayer","off","clearLayers","removeLayer","undefined","setView","target","latlng","getZoom","onAdd","LayerGroup","features","getLayers","mapPixelBounds","markerWidth","markerHeight","i","length","currentMarkerPosition","latLngToContainerPoint","y","min","max","x","markerDistance","center","getCenter","rad","Math","atan2","rad2TopLeftcorner","abs","PI","tan","newOptions","fillOpacity","angle","ref","marker","rotatedMarker","containerPointToLatLng","hasLayer","RotatedMarker","Marker","statics","TRANSFORM_ORIGIN","DomUtil","testProp","_initIcon","prototype","call","_icon","_setPos","pos","TRANSFORM","Browser","ie","costheta","cos","sintheta","sin","filter","setAngle","ang","edgeMarker","Page","props","title","marginTop","minHeight","borderWidth","children","Component","Loadable","animation","loading","zIndex","opacity","Spinner","as","role","defaultProps","SERVER_URL","GetData","hourRange","setHourRange","dates","setDates","selected","selectedGNSS","setSelectedGNSS","loadingPage","setLoadingPage","downloading","setDownloading","useEffect","axios","get","then","res","today","Date","availableDates","data","d","time","lastMonthDates","Array","from","keys","setDate","getDate","date","chunks","date2","date1","getFullYear","getMonth","available","value","getHours","getMinutes","ts","toISOString","extra","mark","v","_","find","marks","t","isAvailable","findIndex","c","catch","err","console","error","displayTime","n","hour","minutes","selectedDate","paddingLeft","paddingTop","Form","margin","Group","Label","Select","onChange","disabled","toLocaleDateString","segment","left","Slider","step","valueLabelFormat","valueLabelDisplay","textAlign","GNSS_INFO_LIST","name","isSelected","includes","marginRight","borderColor","borderBottomStyle","gnss","Button","post","startDate","endDate","gnssTypes","filename","text","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","slice","join","variant","Widget","isLoadable","overflow","widgetKey","top","float","removeItem","right","Title","hoveredStyle","NMEAInfoWidget","handleMouseEnter","setState","hovered","handleMouseLeave","getTableRows","tableRows","structure","message","fields","format","unit","parsed","GPS","Parse","lat","toFixed","lon","notes","prefix","skippable","multiple","content","result","parseFloat","toLocaleTimeString","info","messageFieldsLen","split","maxFields","reduce","prev","curr","arr","String","a","index","getStructure","forEach","getField","colSpan","formatRow","note","state","field","isHovered","msgType","msgSplit","isMsg","flex","f","overflowY","paddingRight","Table","hover","Messages","selectedMsg","selectedType","displayedMessages","indices","selectedIndex","handleMsgClick","msg","msgs","paused","newProps","messages","flexWrap","minWidth","flag","id","textDecoration","bottom","SatelliteMap","legendEntry","isDehighlighted","borderStyle","sat","GNSS_INFO","outline","active","color_darker","visible","prn","norad","gnssStates","navStates","gnss_type","satsActive","satsVisible","satellites","s","mapCenter","defaultPos","src","Alert","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","url","Popup","divIcon","html","ReactDOMServer","renderToString","FileStream","getStandardDeviation","mean","values","sqrt","pow","b","nextSecond","nextSec","second","duration","handlePlayPause","handleMoveHandle","categorizeStates","stateLists","acc","list","inputStream","clearInterval","componentCleanup","window","removeEventListener","addEventListener","nmeaFromFile","tracker","sats","update","lines","chain","groupBy","line","last","some","match","stateFromMessages","states","attr","sum","readLines","start","end","log","setInterval","prevProps","prevState","seconds","getTime","zip","updateData","flat","parseInt","RadarWidget","elevationToRadius","computeX","computeY","createRef","current","offsetHeight","offsetWidth","elevation","azimuth","getDiameter","GNSS_LABEL","countryCode","tdStyle","StatusWidget","formatNavState","extends","lat_mean","std","lat_std","lon_mean","lon_std","alt","alt_mean","alt_std","speed","speed_mean","speed_std","vdop","hdop","pdop","usedSatellites","table","Accordion","flush","PARAMS_LIST","exactValues","Item","eventKey","Header","j","Body","key","row","borderBottom","getMean","calculateExtra","getValues","round","showInactive","inTransition","filterInactive","bind","item","status","borderBottomWidth","paddingBottom","POSITION_CLASSES","bottomleft","bottomright","topleft","topright","BOUNDS_STYLE","weight","MinimapBounds","parentMap","minimap","useMap","useCallback","useMapEvent","getBounds","setBounds","handlers","useMemo","move","useEventHandlers","instance","Rectangle","pathOptions","MinimapControl","mapZoom","dragging","doubleClickZoom","attributionControl","zoomControl","positionClass","gnssColors","Map","receivers","LeafIcon","icons","useMapEvents","panTo","r","MapWidget","ChartJS","register","registerables","SatWidget","satLabel","satName","satColor","satBorder","sort","labels","datasets","snr","color_lighter","showLegend","responsive","maintainAspectRatio","scales","beginAtZero","suggestedMax","ticks","callback","plugins","tooltip","callbacks","context","dataset","legend","generateLabels","fillStyle","strokeStyle","lineWidth","type","defaultDataOptions","showInLegend","markerSize","CHART_COLOR","zoomPlugin","annotationPlugin","require","Chart2","mode","parameter","pointRadius","lineTension","pan","enabled","modifierKey","drag","annotation","annotations","yMin","yMax","borderDash","PARAMS","yAdjust","interaction","intersect","maxTicksLimit","maxRotation","widths","modes","actual","ChartWidget","toggleDual","dual","exactValue","charts","modeIndex","q","handleIntervalChange","forceUpdate","m","GridLayout","WidthProvider","Responsive","Analysis","getLayouts","getWidget","component","intervalMinutes","loadingTimeseries","dataDisplayed","getWidgetAt","w","h","items","placeItem","cols","widgetAtPos","mapWidget","statusWidget","dataSeparated","radarWidget","satWidget","chartWidget","widgetCount","widgetName","minW","minH","resizeHandles","addItem","widget","p","widgetCounter","handleToolbarClick","val","loadData","draggableHandle","layouts","lg","md","sm","breakpoints","rowHeight","toUpperCase","Settings","setLon","setLat","defaultAlt","setAlt","useDefPos","setUseDefPos","setSrc","interval","inputFile","useRef","errorMessage","setErrorMessage","setLoading","setTimeout","apply","Modal","centered","onHide","backdropClassName","closeButton","Check","checked","lineHeight","Text","letterSpacing","Control","ButtonToolbar","ButtonGroup","visibility","whiteSpace","textOverflow","accept","event","stopPropagation","preventDefault","reader","FileReader","onload","errorIndex","file","onerror","files","readAsText","Footer","Object","entries","k","getDMS","exta","truncate","floor","ceil","dd","longOrLat","hemisphere","test","absDD","degrees","dmsArray","Dashboard","setLoadingTimeseries","gnssIsUsed","usedSystems","categorizedStates","messageBatch","nmeaFeed","dataAll","socket","settingsOpen","filterOldStates","reduceDensity","updateDataFile","handleSettingsChange","resetDashboard","handleExport","streamFromServer","close","nmea","io","reconnectionDelayMax","attribute","deleted","updatedData","concat","processStates","cb","refreshData","changes","tf","loadingSettings","clearData","columns","column","csv","col","flatten","sortBy","activeNavStyle","defaultNavStyle","gap","show","withRouter","About","Animated","loaded","delay","enterDuration","Landing","animate","delays","Promise","resolve","overflowX","animationDelay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1690f93e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar, Nav, Container, Image, Card, Fade } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { BsQuestion } from 'react-icons/bs';\r\nimport { BiData, BiLineChart } from 'react-icons/bi';\r\nimport { HiHome } from 'react-icons/hi';\r\n\r\nconst WIDTH = 80\r\nconst FULL_WIDTH = 180\r\n\r\nfunction NavBar() {\r\n    const [expanded, setExpanded] = React.useState(false)\r\n    const [anim, setAnim] = React.useState(false)\r\n    const [selected, setSelected] = React.useState('')\r\n\r\n    function navButton(page) {\r\n        return <NavLink\r\n            exact\r\n            to={page.path}\r\n            className=\"clickable lighten\"\r\n            style={isActive => ({\r\n                marginBottom: '15px',\r\n                height: '40px',\r\n                width: '100%',\r\n                borderRadius: '5px',\r\n                backgroundColor: '#292936',\r\n                display: 'flex',\r\n                justifyContent: 'start',\r\n                alignItems: 'center',\r\n                position: 'relative',\r\n                outlineStyle: isActive ? 'solid' : '',\r\n                outlineWidth: '1px',\r\n                outlineColor: '#3f81eb',\r\n            })}>\r\n            <div style={{ width: '40px', height: '40px', display: 'flex', alignItems: 'center', justifyContent: 'center', position: 'absolute' }}>\r\n                {page.icon}\r\n            </div>\r\n            <div style={{ position: 'absolute' }}>\r\n                {\r\n                    <Fade in={expanded && !anim} timeout={5000}>\r\n                        <div style={{\r\n                            display: !anim ? '' : 'none',\r\n                            color: 'white',\r\n                            marginLeft: '45px',\r\n                        }}>\r\n                            {page.label}\r\n                        </div>\r\n                    </Fade>\r\n                }\r\n            </div>\r\n        </NavLink>\r\n    }\r\n\r\n    return (\r\n        // <Navbar bg=\"dark\" variant=\"dark\">\r\n        //     <Container>\r\n        //         <Navbar.Brand>\r\n        //             <Image style={{ width: '28px', marginRight: '10px' }} src=\"./images/satellite_icon.png\" />\r\n        //             NavSuite\r\n        //         </Navbar.Brand>\r\n        //         <Nav className=\"me-auto\">\r\n        //             <NavLink className=\"nav-link\" to=\"/dashboard\">DASHBOARD</NavLink>\r\n        //             <NavLink className=\"nav-link\" to=\"/data\">GET DATA</NavLink>\r\n        //             <NavLink className=\"nav-link\" to=\"/about\">ABOUT</NavLink>\r\n        //         </Nav>\r\n        //     </Container>\r\n        // </Navbar>\r\n\r\n        <Card\r\n            onTransitionEnd={e => {\r\n                setAnim(false)\r\n            }}\r\n            style={{\r\n                width: `${expanded ? FULL_WIDTH : WIDTH}px`,\r\n                position: 'absolute',\r\n                height: '100%',\r\n                backgroundColor: '#1d1d26',\r\n                display: 'flex',\r\n                borderRadius: '0px',\r\n                // marginTop:'200px',\r\n                alignItems: 'center',\r\n                transition: 'ease-in 0.12s',\r\n                boxShadow: '2px 0px 7px 1px rgba(0,0,0,0.5)'\r\n            }}>\r\n            {/* <div style={{ height: '10%', display: 'flex', alignItems: 'center' }}>\r\n                <Image style={{ width: '20px' }} src=\"./images/satellite_icon.png\" />\r\n                <h1 style={{ fontSize: '16px', color: 'white', display:'inline', marginLeft:'5px' }}>NavSuite</h1>\r\n            </div> */}\r\n            <div\r\n                onMouseEnter={e => { setExpanded(true); setAnim(true) }}\r\n                onMouseLeave={e => { setExpanded(false); setAnim(true) }}\r\n                onClick={e => { setSelected() }}\r\n                style={{ padding: '20px', width: '100%', fontSize: '12px', height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n\r\n                {navButton({\r\n                    icon: <HiHome color='white' size={20} />,\r\n                    label: 'LANDING',\r\n                    path: '/'\r\n                })}\r\n\r\n                {[\r\n                    { icon: <BiLineChart color='white' size={20} />, label: 'DASHBOARD', path: '/dashboard' },\r\n                    { icon: <BiData color='white' size={20} />, label: 'GET DATA', path: '/data' },\r\n                    { icon: <BsQuestion color='white' size={25} />, label: 'ABOUT', path: '/about' },\r\n                ].map(page => navButton(page))}\r\n\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NavBar","import L from 'leaflet'\r\n\r\n(function(L) {\r\n    var classToExtend = 'Class';\r\n    if (L.version.charAt(0) !== '0') {\r\n      classToExtend = 'Layer';\r\n    }\r\n  \r\n    L.EdgeMarker = L[classToExtend].extend({\r\n      options: {\r\n        distanceOpacity: false,\r\n        distanceOpacityFactor: 4,\r\n        layerGroup: null,\r\n        rotateIcons: true,\r\n        findEdge : function (map){\r\n          return L.bounds([0,0], map.getSize());\r\n        },\r\n        icon: L.icon({\r\n          iconUrl: L.Icon.Default.imagePath + '/edge-arrow-marker.png',\r\n          clickable: true,\r\n          iconSize: [48, 48],\r\n          iconAnchor: [24, 24]\r\n        })\r\n      },\r\n  \r\n      initialize: function(options) {\r\n        L.setOptions(this, options);\r\n      },\r\n  \r\n      addTo: function(map) {\r\n        this._map = map;\r\n  \r\n        // add a method to get applicable features\r\n        if (typeof map._getFeatures !== 'function') {\r\n          L.extend(map, {\r\n            _getFeatures: function() {\r\n              var out = [];\r\n              for (var l in this._layers) {\r\n                if (typeof this._layers[l].getLatLng !== 'undefined') {\r\n                  out.push(this._layers[l]);\r\n                }\r\n              }\r\n              return out;\r\n            }\r\n          });\r\n        }\r\n  \r\n        map.on('move', this._addEdgeMarkers, this);\r\n        map.on('viewreset', this._addEdgeMarkers, this);\r\n  \r\n        this._addEdgeMarkers();\r\n  \r\n        map.addLayer(this);\r\n  \r\n        return this;\r\n      },\r\n  \r\n      destroy: function() {\r\n        if (this._map && this._borderMarkerLayer) {\r\n          this._map.off('move', this._addEdgeMarkers, this);\r\n          this._map.off('viewreset', this._addEdgeMarkers, this);\r\n  \r\n          this._borderMarkerLayer.clearLayers();\r\n          this._map.removeLayer(this._borderMarkerLayer);\r\n  \r\n          delete this._map._getFeatures;\r\n  \r\n          this._borderMarkerLayer = undefined;\r\n        }\r\n      },\r\n  \r\n      onClick: function(e) {\r\n        this._map.setView(e.target.options.latlng, this._map.getZoom());\r\n      },\r\n  \r\n      onAdd: function() {},\r\n  \r\n      _borderMarkerLayer: undefined,\r\n  \r\n      _addEdgeMarkers: function() {\r\n        if (typeof this._borderMarkerLayer === 'undefined') {\r\n          this._borderMarkerLayer = new L.LayerGroup();\r\n        }\r\n        this._borderMarkerLayer.clearLayers();\r\n  \r\n        var features = [];\r\n        if (this.options.layerGroup != null) {\r\n          features = this.options.layerGroup.getLayers();\r\n        } else {\r\n          features = this._map._getFeatures();\r\n        }\r\n  \r\n        var mapPixelBounds = this.options.findEdge(this._map);\r\n  \r\n        var markerWidth = this.options.icon.options.iconSize[0];\r\n        var markerHeight = this.options.icon.options.iconSize[1];\r\n  \r\n        for (var i = 0; i < features.length; i++) {\r\n          var currentMarkerPosition = this._map.latLngToContainerPoint(\r\n            features[i].getLatLng()\r\n          );\r\n  \r\n          if (currentMarkerPosition.y < mapPixelBounds.min.y ||\r\n            currentMarkerPosition.y > mapPixelBounds.max.y ||\r\n            currentMarkerPosition.x > mapPixelBounds.max.x ||\r\n            currentMarkerPosition.x < mapPixelBounds.min.x\r\n          ) {\r\n            // get pos of marker\r\n            var x = currentMarkerPosition.x;\r\n            var y = currentMarkerPosition.y;\r\n            var markerDistance;\r\n  \r\n            // we want to place EdgeMarker on the line from center screen to target,\r\n            // and against the border of the screen\r\n            // we know angel and its x or y cordiante\r\n            // (depending if we want to place it against top/bottom edge or left right edge)\r\n            // fromthat we can calculate the other cordinate\r\n            var center = mapPixelBounds.getCenter();\r\n  \r\n            var rad = Math.atan2(center.y - y, center.x - x);\r\n            var rad2TopLeftcorner = Math.atan2(center.y-mapPixelBounds.min.y,center.x-mapPixelBounds.min.x);\r\n  \r\n            // target is in between diagonals window/ hourglass\r\n            // more out in y then in x\r\n            if (Math.abs(rad) > rad2TopLeftcorner && Math.abs (rad) < Math.PI -rad2TopLeftcorner) {\r\n  \r\n              // bottom out\r\n              if (y < center.y ){\r\n                y = mapPixelBounds.min.y + markerHeight/2;\r\n                x = center.x -  (center.y-y) / Math.tan(Math.abs(rad));\r\n                markerDistance = currentMarkerPosition.y - mapPixelBounds.y;\r\n              // top out\r\n              }else{\r\n                y = mapPixelBounds.max.y - markerHeight/2;\r\n                x = center.x - (y-center.y)/ Math.tan(Math.abs(rad));\r\n                markerDistance = -currentMarkerPosition.y;\r\n              }\r\n            }else {\r\n  \r\n              // left out\r\n              if (x < center.x ){\r\n                x = mapPixelBounds.min.x + markerWidth/2;\r\n                y = center.y -  (center.x-x ) *Math.tan(rad);\r\n                markerDistance = -currentMarkerPosition.x;\r\n              // right out\r\n              }else{\r\n                x = mapPixelBounds.max.x - markerWidth/2;\r\n                y = center.y +  (x - center.x) *Math.tan(rad);\r\n                markerDistance = currentMarkerPosition.x - mapPixelBounds.x;\r\n              }\r\n            }\r\n            // correction so that is always has same distance to edge\r\n  \r\n            // top out (top has y=0)\r\n            if (y < mapPixelBounds.min.y + markerHeight/2) {\r\n              y = mapPixelBounds.min.y + markerHeight/2;\r\n              // bottom out\r\n            }\r\n            else if (y > mapPixelBounds.max.y - markerHeight/2) {\r\n              y = mapPixelBounds.max.y - markerHeight/2 ;\r\n            }\r\n            // right out\r\n            if (x > mapPixelBounds.max.x - markerWidth / 2) {\r\n              x = mapPixelBounds.max.x - markerWidth / 2;\r\n              // left out\r\n            } else if (x < markerWidth / 2) {\r\n              x = mapPixelBounds.min.x + markerWidth / 2;\r\n            }\r\n  \r\n            // change opacity on distance\r\n            var newOptions = this.options;\r\n            if (this.options.distanceOpacity) {\r\n              newOptions.fillOpacity =\r\n                (100 - markerDistance / this.options.distanceOpacityFactor) / 100;\r\n            }\r\n  \r\n            // rotate markers\r\n            if (this.options.rotateIcons) {\r\n              var angle = rad / Math.PI * 180;\r\n              newOptions.angle = angle;\r\n            }\r\n  \r\n            var ref = { latlng: features[i].getLatLng() };\r\n            newOptions = L.extend({}, newOptions, ref);\r\n  \r\n            var marker = L.rotatedMarker(\r\n              this._map.containerPointToLatLng([x, y]),\r\n              newOptions\r\n            ).addTo(this._borderMarkerLayer);\r\n  \r\n            marker.on('click', this.onClick, marker);\r\n          }\r\n        }\r\n        if (!this._map.hasLayer(this._borderMarkerLayer)) {\r\n          this._borderMarkerLayer.addTo(this._map);\r\n        }\r\n      }\r\n    });\r\n  \r\n    /*\r\n     * L.rotatedMarker class is taken from https://github.com/bbecquet/Leaflet.PolylineDecorator.\r\n     */\r\n    L.RotatedMarker = L.Marker.extend({\r\n      options: {\r\n        angle: 0\r\n      },\r\n  \r\n      statics: {\r\n        TRANSFORM_ORIGIN: L.DomUtil.testProp([\r\n          'transformOrigin',\r\n          'WebkitTransformOrigin',\r\n          'OTransformOrigin',\r\n          'MozTransformOrigin',\r\n          'msTransformOrigin'\r\n        ])\r\n      },\r\n  \r\n      _initIcon: function() {\r\n        L.Marker.prototype._initIcon.call(this);\r\n  \r\n        this._icon.style[L.RotatedMarker.TRANSFORM_ORIGIN] = '50% 50%';\r\n      },\r\n  \r\n      _setPos: function(pos) {\r\n        L.Marker.prototype._setPos.call(this, pos);\r\n  \r\n        if (L.DomUtil.TRANSFORM) {\r\n          // use the CSS transform rule if available\r\n          this._icon.style[L.DomUtil.TRANSFORM] +=\r\n            ' rotate(' + this.options.angle + 'deg)';\r\n        } else if (L.Browser.ie) {\r\n          // fallback for IE6, IE7, IE8\r\n          var rad = this.options.angle * (Math.PI / 180),\r\n            costheta = Math.cos(rad),\r\n            sintheta = Math.sin(rad);\r\n          this._icon.style.filter +=\r\n            \" progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=\" +\r\n            costheta +\r\n            ', M12=' +\r\n            -sintheta +\r\n            ', M21=' +\r\n            sintheta +\r\n            ', M22=' +\r\n            costheta +\r\n            ')';\r\n        }\r\n      },\r\n  \r\n      setAngle: function(ang) {\r\n        this.options.angle = ang;\r\n      }\r\n    });\r\n  \r\n    L.rotatedMarker = function(pos, options) {\r\n      return new L.RotatedMarker(pos, options);\r\n    };\r\n  \r\n    L.edgeMarker = function(options) {\r\n      return new L.EdgeMarker(options);\r\n    };\r\n  })(L);","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nclass Page extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return <div className=\"page\">\r\n            <h2 style={{ marginLeft: '30px' }}>{this.props.title}</h2>\r\n            <div style={{padding:'5px'}}>\r\n                <Card style={{ marginTop: '20px', padding: '30px', minHeight: '200px', borderRadius: '7px', borderWidth: '0px' }}>\r\n                    {\r\n                        this.props.children\r\n                    }\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport { Fade, Spinner } from 'react-bootstrap';\r\n\r\nclass Loadable extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Loadable\" style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                position: 'relative',\r\n            }}>\r\n                <div style={{\r\n                    // display: this.props.loading ? 'flex' : 'none',\r\n                    display: 'flex',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    position: 'absolute',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    animation: this.props.loading ? '' : 'fadeOut ease 0.4s forwards',\r\n                    zIndex: 999\r\n                    // visibility: this.props.loading ? 'visible' : 'hidden'\r\n                }}>\r\n                    <div\r\n                        style={{\r\n                            // display: this.props.loading ? '' : 'none',\r\n                            position: 'absolute',\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            backgroundColor: this.props.color ? this.props.color : 'white',\r\n                            opacity: this.props.opacity ? this.props.opacity : 0.8,\r\n                            // zIndex: 98,\r\n                            borderRadius: '7px'\r\n                        }}\r\n                    />\r\n                    <Spinner\r\n                        style={{\r\n                            ...this.props.style,\r\n                            // zIndex: 99\r\n                        }}\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                    />\r\n                </div>\r\n\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLoadable.defaultProps = {\r\n    style: {\r\n        width: '40px',\r\n        height: '40px'\r\n    }\r\n}\r\n\r\nexport default Loadable;","import React, { useEffect } from 'react';\r\nimport Page from '../Page';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Button, Card, Form, Spinner } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { Slider } from '@mui/material';\r\nimport { GNSS_INFO_LIST } from '../Dashboard/Dashboard';\r\nimport Loadable from '../../Loadable';\r\nimport _ from 'lodash';\r\n\r\n// export const SERVER_URL = 'http://192.168.0.179:3000'\r\nexport const SERVER_URL = 'http://localhost:3001'\r\n\r\nfunction GetData() {\r\n    const [hourRange, setHourRange] = React.useState([1, 48]);\r\n\r\n    const [dates, setDates] = React.useState([]);\r\n    const [selected, setSelected] = React.useState(null);\r\n    const [selectedGNSS, setSelectedGNSS] = React.useState(['GPS']);\r\n    const [loadingPage, setLoadingPage] = React.useState(true);\r\n    const [downloading, setDownloading] = React.useState(false);\r\n\r\n    const warningMessage = () => {\r\n        return selectedGNSS.length ? null : <span className=\"mt-1\" style={{ color: 'darkred' }}>* select some GNSS systems.</span>\r\n    }\r\n\r\n    const getDate = (dateString) => new Date(dateString.split('T')[0]);\r\n    const getExactDate = (dateString) => new Date(dateString);\r\n\r\n\r\n\r\n    const isSameDay = (date1, date2) => (\r\n        date1.getFullYear() === date2.getFullYear() &&\r\n        date1.getMonth() === date2.getMonth() &&\r\n        date1.getDate() === date2.getDate()\r\n    )\r\n\r\n    const getAvailableRange = () => {\r\n        axios.get(\r\n            `${SERVER_URL}/data/available/30`\r\n        ).then(res => {\r\n            const today = new Date()\r\n            const availableDates = res.data.map(d => new Date(d.time))\r\n            const lastMonthDates = Array.from(Array(30).keys()).map(i =>\r\n                new Date(new Date().setDate(today.getDate() - i))\r\n            )\r\n\r\n            const dates = lastMonthDates.map(date => {\r\n                let chunks = availableDates.filter(d => isSameDay(d, date))\r\n                // console.log(chunks)\r\n                let available = chunks.map(d => ({\r\n                    value: d.getHours() * 2 + (d.getMinutes() >= 30 ? 2 : 1),\r\n                    ts: d.toISOString()\r\n                }))\r\n                let extra = available.map(mark => mark.value + 1).filter(v => !_.find(marks, ['value', v]))\r\n                let marks = [...available, ...extra.map(e => ({ value: e }))]\r\n\r\n                return {\r\n                    t: date,\r\n                    isAvailable: chunks.length ? true : false,\r\n                    chunks: chunks,\r\n                    available: available,\r\n                    marks: marks,\r\n                }\r\n            })\r\n\r\n            setDates(dates)\r\n\r\n            let i = dates.findIndex(d => d.isAvailable)\r\n            setSelected(i)\r\n            setHourRange([\r\n                Math.min(...dates[i].marks.map(c => c.value)),\r\n                Math.max(...dates[i].marks.map(c => c.value))\r\n            ])\r\n            // handleDateSelect(0)\r\n\r\n            setLoadingPage(false)\r\n        }).catch(err => {\r\n            console.error('Getting available dates failed.', err)\r\n        })\r\n\r\n        // setMinDate(new Date(2021, 9, 20))\r\n        // setMaxDate(new Date(2021, 9, 24))\r\n    }\r\n\r\n    function download(filename, text) {\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', filename);\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    const handleDownload = () => {\r\n        setDownloading(true)\r\n        // let [max, min] = selectedDate().marks.filter(e => hourRange.includes(e.value)) \r\n        let min = new Date(\r\n            selectedDate().t.getFullYear(),\r\n            selectedDate().t.getMonth(),\r\n            selectedDate().t.getDate(),\r\n            ~~(hourRange[0] / 2),\r\n            (hourRange[0] % 2 ? 30 : 0)\r\n        ).toISOString()\r\n        let max = new Date(\r\n            selectedDate().t.getFullYear(),\r\n            selectedDate().t.getMonth(),\r\n            selectedDate().t.getDate(),\r\n            ~~(hourRange[1] / 2),\r\n            (hourRange[1] % 2 ? 30 : 0)\r\n        ).toISOString()\r\n\r\n        axios.post(\r\n            `${SERVER_URL}/data/download`, {\r\n            startDate: min,\r\n            endDate: max,\r\n            gnssTypes: GNSS_INFO_LIST.filter(gnss => selectedGNSS.includes(gnss.name)).map(gnss => gnss.label)\r\n        }\r\n        ).then(res => {\r\n            setDownloading(false)\r\n            download(`nmea_${`${min}`.slice(0, -8)}-${`${max}`.slice(0, -8)}.txt`, res.data.join('\\n'))\r\n        }).catch(err => {\r\n            setDownloading(false)\r\n            console.error('Download failed.', err)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAvailableRange()\r\n    }, [])\r\n\r\n    const displayTime = (n) => {\r\n        let hour = ~~(n / 2)\r\n        let minutes = n % 2\r\n\r\n        return `${hour === 24 ? '0' : hour}:${minutes ? '30' : '00'}:00`\r\n    }\r\n\r\n    const selectedDate = () => {\r\n        return dates[selected]\r\n    }\r\n\r\n    const handleDateSelect = (i) => {\r\n        setHourRange([\r\n            Math.min(...dates[i].marks.map(c => c.value)),\r\n            Math.max(...dates[i].marks.map(c => c.value))\r\n        ])\r\n        setSelected(i)\r\n    }\r\n\r\n    const handleGNSSClick = (gnss) => {\r\n        setSelectedGNSS(\r\n            selectedGNSS.includes(gnss) ?\r\n                selectedGNSS.filter(i => i !== gnss) :\r\n                [...selectedGNSS, gnss]\r\n        )\r\n    }\r\n\r\n    const circle = (segment) => {\r\n        return <div style={{\r\n            position: 'absolute',\r\n            left: `calc(${(100 / 48) * (segment) + 100 / 96}% - 2px )`,\r\n            width: '4px',\r\n            height: '4px',\r\n            borderRadius: '50%',\r\n            backgroundColor: 'green'\r\n        }} />\r\n    }\r\n\r\n    const getMarks = () => selected !== null ? dates[selected].marks : []\r\n    const getAvailable = () => selected !== null ? dates[selected].available.map(mark => circle(mark.value)) : null\r\n\r\n    return (\r\n        <Page title=\"Get Data\">\r\n            <span style={{ fontSize: '16px', width: '800px', paddingLeft: '4%', paddingTop: '30px' }}>Download GNSS navigation data from our server.\r\n                Data is gathered by a receiver station installed on the FIIT building rooftop and stored inside a database in <b>NMEA</b> format.\r\n                <br />\r\n                Data will be downloaded in the form of a <i>.txt</i> file.\r\n            </span><br />\r\n            <div>\r\n                {/* <div style={{ width: '250px', float: 'left' }}>\r\n                    <DatePicker\r\n                        placeholderText=\"Click to select an interval\"\r\n                        selectsRange={true}\r\n                        startDate={startDate}\r\n                        endDate={endDate}\r\n                        onChange={(update) => {\r\n                            setDateRange(update);\r\n                        }}\r\n                        withPortal\r\n                        fixedHeight\r\n                        className=\"datepicker\"\r\n                        isClearable\r\n                        minDate={minDate}\r\n                        maxDate={maxDate}\r\n                    />\r\n                </div> */}\r\n\r\n                <Loadable opacity={0.9} loading={loadingPage}>\r\n                    <Form style={{ width: '90%', margin: 'auto' }}>\r\n                        <Form.Group className='mb-5'>\r\n                            <Form.Label style={{ color: 'gray', fontSize: '14px', marginBottom: '5px' }}>Select Date</Form.Label>\r\n                            <Form.Select onChange={e => { handleDateSelect(e.target.value) }} style={{ width: '200px' }}>\r\n                                {\r\n                                    dates.map((date, i) =>\r\n                                        <option key={date.t} value={i} disabled={!date.isAvailable} style={{ color: date.isAvailable ? '' : '#c6c6c6' }}>\r\n                                            {\r\n                                                date.isAvailable ?\r\n                                                    date.t.toLocaleDateString() :\r\n                                                    `${date.t.toLocaleDateString()}`\r\n                                            }\r\n                                        </option>\r\n                                    )\r\n                                }\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-5'>\r\n                            <Form.Label style={{ color: 'gray', fontSize: '14px', marginBottom: '5px' }}>Select Hour Interval</Form.Label>\r\n                            <Card style={{ padding: '30px' }}>\r\n                                <div style={{ width: '90%', margin: 'auto', position: 'relative' }}>\r\n                                    {getAvailable()}\r\n                                    <Slider\r\n                                        onChange={e => { setHourRange(e.target.value) }}\r\n                                        style={{ width: '100%', display: 'block' }}\r\n                                        min={0}\r\n                                        max={48}\r\n                                        step={null}\r\n                                        marks={getMarks()}\r\n                                        value={hourRange}\r\n                                        // size='small'\r\n                                        valueLabelFormat={v => displayTime(v)}\r\n                                        valueLabelDisplay=\"auto\"></Slider>\r\n                                    <div style={{\r\n                                        marginTop: '24px', fontSize: '19px', width: '100%', height: '24px', display: 'flex', justifyContent: 'center', alignItems: 'center'\r\n                                    }}>\r\n                                        <span>\r\n                                            {displayTime(hourRange[0])}\r\n                                        </span>\r\n                                        <div style={{ width: '50px', textAlign: 'center', fontSize: '19px' }}>-</div>\r\n                                        <span>{displayTime(hourRange[1])}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        </Form.Group>\r\n                        <Form.Group className='mb-5'>\r\n                            <Form.Label style={{ color: 'gray', fontSize: '14px', marginBottom: '5px' }}>Selected GNSS</Form.Label>\r\n                            <div style={{ margin: '20px', height: '35px' }}>\r\n                                {\r\n                                    GNSS_INFO_LIST.map(({ name }) => {\r\n                                        let isSelected = selectedGNSS.includes(name)\r\n\r\n                                        return <span style={{\r\n                                            marginRight: '40px',\r\n                                            padding: '5px',\r\n                                            color: isSelected ? '#1976d2' : '',\r\n                                            borderColor: isSelected ? '#1976d2' : '',\r\n                                            borderBottomStyle: isSelected ? 'solid' : ''\r\n                                        }} className=\"gnss-select clickable noselect\" onClick={_ => handleGNSSClick(name)}>\r\n                                            {name}\r\n                                        </span>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </Form.Group>\r\n\r\n                        <Button\r\n                            onClick={handleDownload}\r\n                            disabled={!selectedGNSS.length || loadingPage || downloading}\r\n                            style={{ display: 'block' }}\r\n                            variant=\"dark\" >\r\n                            Download data\r\n\r\n                            <Spinner style={{ marginLeft: '10px', display: downloading ? '' : 'none' }} size='sm' animation=\"border\" />\r\n                        </Button>\r\n                        {warningMessage()}\r\n                    </Form>\r\n                </Loadable>\r\n            </div>\r\n        </Page >\r\n    )\r\n}\r\n\r\nexport default GetData;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport Loadable from '../Loadable';\r\nimport { BsX } from 'react-icons/bs'\r\n\r\n\r\n\r\nclass Widget extends React.Component {\r\n    isLoadable = () => typeof this.props.loading === 'boolean'\r\n\r\n    body = () => <Card className='noselect nodrag' style={{\r\n        padding: '15px',\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '7px',\r\n        borderWidth: '0px',\r\n        position: 'relative',\r\n        boxShadow: '3px 3px 9px 2px rgba(0,0,0,0.05)',\r\n        overflow: 'hidden'\r\n    }}>\r\n        <div style={{\r\n            display: this.props.widgetKey ? '' : 'none',\r\n            // backgroundColor: '#dde5ed',\r\n            width: '100%',\r\n            height: '14px',\r\n            position: 'absolute',\r\n            top: '0px',\r\n            left: '0px',\r\n        }}>\r\n            <div className='grabbable' style={{\r\n                backgroundColor: '#dde5ed',\r\n                width: 'calc(100% - 25px)',\r\n                float: 'left',\r\n                height: '100%'\r\n            }} />\r\n            <div\r\n                onClick={e => {\r\n                    this.props.removeItem(this.props.widgetKey);\r\n                }}\r\n                className='clickable darkenOnHover'\r\n                style={{\r\n                    backgroundColor: '#dde5ed',\r\n                    position: 'absolute',\r\n                    right: '0px',\r\n                    height: '100%',\r\n                    width: '25px',\r\n                    // backgroundColor:'red',\r\n                    // borderLeftStyle: 'solid',\r\n                    // borderLeftWidth: '1px',\r\n                    // borderLeftColor: '#d0d0d0',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center'\r\n                }}>\r\n                <BsX size={12} />\r\n            </div>\r\n            {/* <div style={{width:'60px', margin: 'auto', height:'20px', backgroundColor:'#dde5ed', borderRadius:'10px'}}></div> */}\r\n        </div>\r\n        <Card.Title style={{ marginTop: this.props.widgetKey ? '8px' : '', fontSize: '18px' }}>\r\n            {this.props.title}\r\n        </Card.Title>\r\n        \r\n        <div style={{ height: 'calc(100% - 39px)' }}>\r\n            {\r\n                this.props.children\r\n            }\r\n        </div>\r\n    </Card>\r\n\r\n    render() {\r\n        return <div className=\"animated\" style={\r\n            { ...this.props.style, padding: '5px' }\r\n        }>\r\n            {\r\n                this.isLoadable() ? <Loadable loading={this.props.loading}>\r\n                    {this.body()}\r\n                </Loadable> : this.body()\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Widget;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport Widget from '../Widget';\r\n\r\nimport { getStructure } from './InfoData';\r\n\r\nconst hoveredStyle = { backgroundColor: '#3f81eb', color: 'white', padding: '2px', borderRadius: '2px' }\r\n\r\nclass NMEAInfoWidget extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hovered: null\r\n        }\r\n    }\r\n\r\n    getField(message, n) {\r\n        return message.split(/[,\\*]/)[n] ? message.split(/[,\\*]/)[n] : null\r\n    }\r\n\r\n    handleMouseEnter = (i) => {\r\n        this.setState({ hovered: i })\r\n    }\r\n\r\n    handleMouseLeave = (i) => {\r\n        this.setState({ hovered: null })\r\n    }\r\n\r\n    formatRow(field, e) {\r\n        if (e.format(field) === null) {\r\n            return <span style={{ color: 'gray' }}>null</span>\r\n        }\r\n\r\n        return <span className=\"noselect\" style={this.isHovered(e.index) ? hoveredStyle : { padding: '2px' }}>\r\n            {` ${e.prefix}${e.format(field)}${e.unit}`}\r\n        </span>\r\n    }\r\n\r\n    isHovered(i) {\r\n        return this.state.hovered === i\r\n    }\r\n\r\n    getTableRows = () => {\r\n        let tableRows = []\r\n        let structure = getStructure(this.props.message)\r\n        let index = 0\r\n\r\n        structure.forEach(e => {\r\n            if (!this.getField(this.props.message, index + 1) && e.skippable) {\r\n            } else {\r\n                tableRows.push(\r\n                    e.info ? <tr key={`row_${index}`}><td style={{ textAlign: 'center' }} colSpan={3}>{e.label}</td></tr> :\r\n                        <tr\r\n                            key={`row_${index}`}\r\n                            onMouseEnter={_ => { this.handleMouseEnter(e.index) }}\r\n                            onMouseLeave={_ => { this.handleMouseLeave(e.index) }}\r\n                        >\r\n                            <td className=\"noselect\" style={{ width: '190px', color: '#707070' }}>\r\n                                {\r\n                                    <span className=\"d-block\">\r\n                                        {e.label}:\r\n                                    </span>\r\n                                }\r\n                            </td>\r\n                            <td >\r\n                                {\r\n                                    this.formatRow(this.getField(this.props.message, e.index + 1), e)\r\n                                }\r\n                            </td>\r\n                            {\r\n                                e.notes.length ? <td>\r\n                                    {e.notes.map((note, i) =>\r\n                                        <span key={`note_${index}_${i}`} className=\"d-block\" style={{\r\n                                            marginLeft: '0px',\r\n                                            fontSize: '13px'\r\n                                        }}>\r\n                                            {note}\r\n                                        </span>\r\n                                    )}\r\n                                </td> : <td></td>\r\n                            }\r\n                        </tr>\r\n                )\r\n            }\r\n\r\n            index += 1\r\n        })\r\n\r\n        return tableRows\r\n    }\r\n\r\n    render() {\r\n        let msgType, msgSplit\r\n        let isMsg = this.props.message.length\r\n\r\n        if (this.props.message) {\r\n            msgType = this.props.message.split(/[,\\*]/)[0]\r\n            msgSplit = this.props.message.split(/[,\\*]/).slice(1)\r\n        }\r\n\r\n        return (\r\n            <Widget\r\n                style={{ height: 'calc( 100vh - 150px )', width: 'calc(50% - 10px)', flex: 1 }}\r\n                title={\r\n                    isMsg ? <div style={{ width: '100%', height: '90px', padding: '20px', fontSize: '18px' }}>\r\n                        {/* <span style={{ fontSize: '20px', height: '20px', width: '100%' }}>\r\n                        G*GLL Message\r\n                    </span> */}\r\n                        <div className=\"noselect\" style={{ height: '100px' }}>\r\n                            <span className=\"d-block mb-1\" style={{ fontSize: '14px', color: 'gray' }}>\r\n                                Message\r\n                            </span>\r\n                            {msgType}\r\n                            {\r\n                                msgSplit.map((f, i) =>\r\n                                    <span\r\n                                        key={`message_field_${i}`}\r\n                                        onMouseEnter={_ => { this.handleMouseEnter(i) }}\r\n                                        onMouseLeave={_ => { this.handleMouseLeave(i) }}>\r\n                                        {i < msgSplit.length - 1 ? ',' : '*'}\r\n                                        <span style={this.isHovered(i) ? hoveredStyle : {}}>{f}</span>\r\n                                    </span>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div> : null\r\n                }>\r\n                <div style={{ height: 'calc(100% - 0px)', overflowY: 'auto', paddingLeft: '30px', paddingRight: '30px' }}>\r\n                    {\r\n                        isMsg ? <Table style={{ fontSize: '14px' }} size=\"sm\" hover>\r\n                            <tbody>\r\n                                {this.getTableRows()}\r\n                            </tbody>\r\n                        </Table> : null\r\n                    }\r\n                </div>\r\n\r\n            </Widget>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NMEAInfoWidget;","import GPS from \"gps\"\r\nimport { io } from \"socket.io-client\"\r\n\r\nexport function getStructure(message) {\r\n    const fields = {\r\n        'UTC': {\r\n            label: 'UTC',\r\n            format: (v) => v ? `${v.slice(0, 2)}:${v.slice(2, 4)}:${v.slice(4, 6)}` : null,\r\n        },\r\n        'Lat': {\r\n            label: 'Latitude', unit: '°', format: (v) => {\r\n                let parsed = GPS.Parse(message)\r\n                return parsed.lat ? +(parsed.lat).toFixed(6) : null\r\n            }\r\n        },\r\n        'Lat Dir': { label: 'Lat Direction', },\r\n        'Lon': {\r\n            label: 'Longitude', unit: '°', format: (v) => {\r\n                let parsed = GPS.Parse(message)\r\n                return parsed.lon ? +(parsed.lon).toFixed(6) : null\r\n            }\r\n        },\r\n        'Data Status': {\r\n            label: 'Data Status', notes: [\r\n                'A = Data Valid',\r\n                'V = Data Invalid'\r\n            ]\r\n        },\r\n        'Lon Dir': { label: 'Lon Direction', },\r\n        'Alt': { label: 'Altitude', unit: ' m' },\r\n        'HDOP': { label: 'Horizontal DOP' },\r\n        'VDOP': { label: 'Vertical DOP' },\r\n        'PDOP': { label: 'Position DOP' },\r\n        'Checksum': { label: 'Checksum', prefix: '*' },\r\n        'Satellite Info': [\r\n            { label: 'SV PRN number', skippable: true },\r\n            { label: 'Elevation (90 max)', unit: '°', skippable: true },\r\n            { label: 'Azimuth', unit: '°', skippable: true },\r\n            {\r\n                label: 'SNR', format: (v) => {\r\n                    if (!v) {\r\n                        return '0 dB (in view)'\r\n                    } else {\r\n                        return `${v} dB (tracking)`\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        'Empty': { label: '(Not Used)' },\r\n        'Mode Indicator': { label: 'Mode indicator', notes: ['A = Autonomous', 'D = Differential', 'E = Estimated', 'M = Manual input', 'N = Data not valid'] }\r\n    }\r\n\r\n    let multiple = (n, content, label) => {\r\n        let result = [{ label: label, fields: 0 }]\r\n        result = []\r\n\r\n        for (var i = 1; i <= n; i++) {\r\n            result = [...result, ...content]\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n    const structure = {\r\n        'GLL': [\r\n            { label: 'Latitude', unit: '°', },\r\n            { label: 'Lat Direction', },\r\n            { label: 'Longitude', unit: '°', },\r\n            { label: 'Lon Direction', },\r\n            { label: 'UTC', format: (v) => new Date(parseFloat(v)).toLocaleTimeString(), },\r\n            'Data Status',\r\n            { label: 'Mode Indicator' },\r\n            { label: 'Checksum Data', prefix: '*' }\r\n        ],\r\n        'GGA': [\r\n            'UTC',\r\n            'Lat',\r\n            'Lat Dir',\r\n            'Lon',\r\n            'Lon Dir',\r\n            {\r\n                label: 'Fix Quality', notes: [\r\n                    '0 = Invalid',\r\n                    '1 = GNSS fix (SPS)',\r\n                    '2 = DGPS fix',\r\n                    '3 = PPS fix',\r\n                    '4 = Real Time Kinematic',\r\n                    '6 = Estimated (dead reckoning) (2.3 feature)',\r\n                    '7 = Manual input mode',\r\n                    '8 = Simulation mode'\r\n                ]\r\n            },\r\n            { label: '# of tracked satellites' },\r\n            'HDOP',\r\n            'Alt',\r\n            { label: 'Altitude Units', notes: ['M = metres'] },\r\n            { label: 'Undulation', notes: ['Height of geoid above WGS84 ellipsoid'] },\r\n            { label: 'Undulation Units', notes: ['M = metres'] },\r\n            // { label: 'Time since last DGPS update', format: (v) => new Date(parseFloat(v)).toLocaleTimeString(), },\r\n            { label: 'Age of correction data', skippable: true, unit: 's' },\r\n            { label: 'DGPS reference station ID' },\r\n            'Checksum'\r\n        ],\r\n        'GSA': [\r\n            { label: 'Mode', notes: ['M = Manual, forced to operate in 2D or 3D', 'A = Automatic, 3D/2D'] },\r\n            {\r\n                label: 'Mode', notes: [\r\n                    '1 = Fix not available',\r\n                    '2 = 2D',\r\n                    '3 = 3D'\r\n                ]\r\n            },\r\n            ...multiple(12, [{ label: 'SV ID', skippable: true }], 'SVs used in position fix'),\r\n            'PDOP',\r\n            'HDOP',\r\n            'VDOP',\r\n            { label: 'System ID' },\r\n            'Checksum'\r\n        ],\r\n        'GSV': [\r\n            { label: '# of messages' },\r\n            { label: 'Message number' },\r\n            { label: '# of SVs in view' },\r\n            {\r\n                multiple: 4,\r\n                info: 'Satellite Info',\r\n                content: fields['Satellite Info']\r\n            },\r\n            // ...multiple(4, fields['Satellite Info'], 'Satellite Info'),\r\n            { label: 'System ID' },\r\n            'Checksum'\r\n        ],\r\n        'RMA': [\r\n            'Data Status',\r\n            'Lat',\r\n            'Lat Dir',\r\n            'Lon',\r\n            'Lon Dir',\r\n            'Empty',\r\n            'Empty',\r\n            { label: 'Speed', unit: ' knots' },\r\n            { label: 'Course' },\r\n            { label: 'Variation' },\r\n            { label: 'Direction of Variation' },\r\n            'Checksum'\r\n        ],\r\n        'GNS': [\r\n            'UTC',\r\n            'Lat',\r\n            'Lat Dir',\r\n            'Lon',\r\n            'Lon Dir',\r\n            {\r\n                label: 'Mode Indicator',\r\n                notes: [\r\n                    'Order: GPS, GLONASS, Galileo, BeiDou',\r\n                    'N = No fix.',\r\n                    'A = Autonomous.',\r\n                    'D = Differential.',\r\n                    'P = Precise.',\r\n                    'R = Real Time Kinematic.',\r\n                    'F = Float RTK.',\r\n                    'E = Estimated (dead reckoning) mode.',\r\n                    'M = Manual input mode.',\r\n                    'S = Simulator mode.'\r\n                ]\r\n            },\r\n            { label: '# of satellites in fix' },\r\n            'HDOP',\r\n            'Alt',\r\n            { label: 'Undulation', notes: ['Height of geoid above WGS84 ellipsoid'], unit: ' m' },\r\n            { label: 'Age of correction data', unit: 's', skippable: true },\r\n            { label: 'Differential reference station ID', skippable: true },\r\n            { label: 'Navigational Status', notes: ['S = Safe', 'C = Caution', 'U = Unsafe', 'V = Not valid for navigation'] },\r\n            'Checksum'\r\n        ],\r\n        'VTG': [\r\n            { label: 'Track True', unit: '°', notes: ['Track made good, degrees True'] },\r\n            { label: 'True track indicator', notes: ['T = True'] },\r\n            { label: 'Track Mag', unit: '°', notes: ['Track made good, degrees Magnetic'] },\r\n            { label: 'Magnetic track indicator', notes: ['M = Magnetic'] },\r\n            { label: 'Speed over ground', unit: ' knots' },\r\n            { label: 'Speed unit', notes: ['N = knots'] },\r\n            { label: 'Speed over ground', unit: ' km/h' },\r\n            { label: 'Speed unit', notes: ['K = km/h'] },\r\n            { label: 'Mode indicator', notes: ['A = Autonomous', 'D = Differential', 'E = Estimated', 'M = Manual input', 'N = Data not valid'] },\r\n            'Checksum'\r\n        ],\r\n        'RMC': [\r\n            'UTC',\r\n            { label: 'Position status', notes: ['A = Data valid', 'V = Data invalid'] },\r\n            'Lat',\r\n            'Lat Dir',\r\n            'Lon',\r\n            'Lon Dir',\r\n            { label: 'Speed over ground', unit: ' knots' },\r\n            { label: 'Track True', unit: '°', notes: ['Track made good, degrees True'] },\r\n            { label: 'Date', format: (v) => v ? `${v.slice(0, 2)}/${v.slice(2, 4)}/${v.slice(4, 6)}` : null },\r\n            { label: 'Magnetic variation', unit: '°' },\r\n            { label: 'Direction', notes: ['Direction of magnetic variation', 'E = East', 'W = West'] },\r\n            'Mode Indicator',\r\n            'Empty',\r\n            'Checksum'\r\n        ],\r\n        'GST': [\r\n            'UTC',\r\n            { label: 'RMS', notes: ['RMS value of the standard deviation of range inputs'] },\r\n            { label: 'Semi-major STD', notes: ['Standard deviation of semi-major axis of error ellipse'], unit: ' m' },\r\n            { label: 'Semi-minor STD', notes: ['Standard deviation of semi-minor axis of error ellipse'], unit: ' m' },\r\n            { label: 'Orientation', notes: ['Orientation of semi-major axis of error ellipse'], unit: '° (from true north)' },\r\n            { label: 'Lat STD', notes: ['Standard deviation of latitude error'], unit: ' m' },\r\n            { label: 'Lon STD', notes: ['Standard deviation of longitude error'], unit: ' m' },\r\n            { label: 'Alt STD', notes: ['Standard deviation of altitude error'], unit: ' m' },\r\n            'Checksum'\r\n        ],\r\n        'ZDA': [\r\n            'UTC',\r\n            { label: 'Day' },\r\n            { label: 'Month' },\r\n            { label: 'Year' },\r\n            { label: 'Local zone' },\r\n            { label: 'Local zone minutes' },\r\n            'Checksum'\r\n        ]\r\n    }\r\n\r\n    if (!structure[message.slice(3, 6)])\r\n        return []\r\n\r\n    let messageFields = message.split(/[\\*,]/)\r\n    let messageFieldsLen = messageFields.length - 1\r\n    let maxFields = structure[message.slice(3, 6)].reduce((prev, curr) => curr.multiple ? prev + curr.multiple * curr.content.length : prev + 1, 0)\r\n\r\n    let arr = structure[message.slice(3, 6)].reduce((prev, curr) => {\r\n        if (typeof curr === 'string' || curr instanceof String) {\r\n            return [...prev, fields[curr]]\r\n        }\r\n        if (curr.multiple) {\r\n            return [\r\n                ...prev,\r\n                // { label: curr.info, info: true },\r\n                ...multiple(curr.multiple - (maxFields - messageFieldsLen) / curr.multiple, curr.content)\r\n            ]\r\n        } else {\r\n            return [...prev, curr]\r\n        }\r\n    }, []).map((e, i) => ({\r\n        unit: '',\r\n        prefix: '',\r\n        notes: [],\r\n        fields: 1,\r\n        format: (a) => {\r\n            return a ? a : null\r\n        },\r\n        ...e\r\n    }))\r\n\r\n    let index = -1\r\n\r\n    return arr.map(e => {\r\n        if (e.info === true) {\r\n            return e\r\n        } else {\r\n            index++\r\n            return {\r\n                ...e,\r\n                index: index\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n\r\n    // return structure[message.slice(3, 6)] ? structure[message.slice(3, 6)].map(\r\n    //     e => (typeof e === 'string' || e instanceof String) ? (fields[e]) : e\r\n    // ).map(e => ({\r\n    //     unit: '',\r\n    //     prefix: '',\r\n    //     notes: [],\r\n    //     fields: 1,\r\n    //     format: (a) => a,\r\n    //     ...e\r\n    // })) : []\r\n}","import React from 'react';\r\nimport Widget from '../../Widgets/Widget';\r\nimport NMEAInfoWidget from '../../Widgets/NMEAInfoWidget/NMEAInfoWidget';\r\nimport { BsPauseFill, BsSkipEndFill } from \"react-icons/bs\";\r\nimport { GNSS_INFO_LIST } from './Dashboard';\r\n\r\nclass Messages extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            msgs: [],\r\n            gnss: 'GP',\r\n            selectedType: '',\r\n            selectedIndex: null,\r\n            hovered: '',\r\n            paused: false,\r\n        }\r\n    }\r\n\r\n    displayedMessages() {\r\n        return this.state.msgs.filter(msg => msg.slice(1, 3) === this.state.gnss)\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (!this.state.paused) {\r\n            this.setState({ msgs: newProps.messages })\r\n        }\r\n    }\r\n\r\n    selectedMsg = () => {\r\n        if (this.state.selectedType === '')\r\n            return this.displayedMessages()[0]\r\n\r\n        let indices = this.displayedMessages().reduce(\r\n            (arr, e, i) =>\r\n                ((e.slice(3, 6) === this.state.selectedType) && arr.push(i), arr),\r\n            []\r\n        )\r\n\r\n        return this.state.selectedIndex > indices.length ?\r\n            this.displayedMessages()[indices[indices.length - 1]] :\r\n            this.displayedMessages()[indices[this.state.selectedIndex]]\r\n\r\n\r\n        // return this.state.msgs[\r\n        //     this.state.msgs.findIndex(msg => msg.slice(3, 6) === this.state.selectedType)\r\n        //     + this.state.selectedIndex\r\n        // ]\r\n    }\r\n\r\n    handleMsgClick = (msg, index) => {\r\n        let msgType = msg.slice(3, 6)\r\n        let indices = this.displayedMessages().reduce(\r\n            (arr, e, i) =>\r\n                ((e.slice(3, 6) === msgType) && arr.push(i), arr),\r\n            []\r\n        )\r\n\r\n        this.setState({\r\n            selectedType: msgType,\r\n            selectedIndex: indices.findIndex((i) => i === index)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='main-content'\r\n                style={{\r\n                    display: 'flex',\r\n                    flexWrap: 'wrap',\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'stretch'\r\n                }}>\r\n                <Widget style={{ minWidth: '550px', width:'calc(50% - 10px)', height: 'calc( 100vh - 150px )', flex: 1 }}\r\n                    title={<div style={{\r\n                        width: '550px',\r\n                        margin: 'auto',\r\n                        display: 'flex',\r\n                        justifyContent: 'center'\r\n                    }}>\r\n                        {\r\n                            GNSS_INFO_LIST.map(gnss =>\r\n                                <div\r\n                                    onClick={e => this.setState({ gnss: gnss.label, selectedType: '', selectedIndex: null })}\r\n                                    className=\"noselect clickable\"\r\n                                    key={`${gnss.label}_option`}\r\n                                    style={{\r\n                                        width: '25%',\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        padding: '10px',\r\n                                        fontSize: '14px',\r\n                                        // backgroundColor: this.state.gnss === gnss.label ? '#fafafa' : '',\r\n                                        borderBottomStyle: this.state.gnss === gnss.label ? 'solid' : '',\r\n                                        borderColor: gnss.color\r\n                                    }}>\r\n                                    {\r\n                                        this.state.gnss === gnss.label ?\r\n                                            <b>{gnss.name}{gnss.flag({ marginLeft: '5px' })}</b> :\r\n                                            <span style={{ opacity: '50%' }}>{gnss.name}{gnss.flag({ marginLeft: '5px' })}</span>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>}>\r\n\r\n                    <div style={{ width: '100%', height: '100%', padding: '30px', display: 'flex' }}>\r\n                        {\r\n                            this.displayedMessages().length > 0 ? <div id=\"message-batch\">\r\n                                <span style={{ fontSize: '14px', color: 'gray' }}>Message batch</span>\r\n                                <br />\r\n                                {this.displayedMessages().map((msg, i) =>\r\n                                    <span\r\n                                        key={`message_${i}`}\r\n                                        className=\"clickable\"\r\n                                        onClick={_ => {\r\n                                            this.handleMsgClick(msg, i)\r\n                                        }}\r\n                                        onMouseEnter={_ => { this.setState({ hovered: msg }) }}\r\n                                        onMouseLeave={_ => { this.setState({ hovered: '' }) }}\r\n\r\n                                        style={{\r\n                                            display: 'block',\r\n                                            fontSize: '15px',\r\n                                            marginBottom: '4px',\r\n                                            marginLeft: this.state.hovered === msg ? '5px' : '0px',\r\n                                            transition: 'ease 0.1s',\r\n                                        }}>\r\n                                        {\r\n                                            this.selectedMsg() === msg ? <b style={{ textDecoration: 'underline' }}>{msg}</b> : msg\r\n                                        }\r\n                                    </span>\r\n                                )}\r\n                            </div> : <span style={{ fontSize: '14px', color: 'gray', margin: 'auto' }}>\r\n                                No {this.state.gnss} NMEA messages.\r\n                            </span>\r\n                        }\r\n\r\n\r\n                        <div style={{\r\n                            height: '100px',\r\n                            width: '100%',\r\n                            position: 'absolute',\r\n                            bottom: '0px',\r\n                            left: '0px',\r\n                            right: '0px',\r\n                            display: 'flex',\r\n                            justifyContent: 'center'\r\n                        }}>\r\n                            <BsPauseFill\r\n                                className=\"clickable opacityHover\"\r\n                                onClick={e => this.setState({ paused: true })}\r\n                                style={{ opacity: this.state.paused ? '100%' : '50%' }}\r\n                                size={40} />\r\n                            <div style={{ width: '40px' }}></div>\r\n                            <BsSkipEndFill\r\n                                className=\"clickable opacityHover\"\r\n                                onClick={e => this.setState({ paused: false })}\r\n                                style={{ opacity: !this.state.paused ? '100%' : '50%' }}\r\n                                size={40} />\r\n                        </div>\r\n                    </div>\r\n                </Widget>\r\n\r\n                {this.selectedMsg() ? <NMEAInfoWidget message={this.selectedMsg()} /> : <div style={{ flex: 1 }} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { defaultPos, GNSS_INFO, GNSS_INFO_LIST } from './Dashboard';\r\n\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { MapContainer } from 'react-leaflet';\r\nimport Widget from '../../Widgets/Widget';\r\nimport { TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { Alert } from 'react-bootstrap';\r\n// import { NightRegion } from 'react-leaflet-night-region'\r\n\r\nclass SatelliteMap extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            hovered: '',\r\n            selected: ''\r\n        }\r\n    }\r\n\r\n    isDehighlighted(gnss) {\r\n        return (this.state.hovered || this.state.selected) && (!this.isHovered(gnss) && !this.isSelected(gnss))\r\n    }\r\n\r\n    isSelected = (gnss) => this.state.selected === gnss && this.state.selected\r\n    isHovered = (gnss) => this.state.hovered === gnss && this.state.hovered\r\n\r\n    icon(sat) {\r\n        return <div\r\n            key={`icon_${sat.norad}`}\r\n            style={{\r\n                transition: 'ease 0.15s',\r\n                borderRadius: '50%',\r\n                width: '26px',\r\n                height: '26px',\r\n                textAlign: 'center',\r\n                backgroundColor: GNSS_INFO[sat.gnss].color,\r\n                padding: '0px',\r\n                // border: `2px solid ${GNSS_INFO[sat.gnss].color_lighter}`,\r\n                outline: `${sat.active ? '3' : '2'}px solid ${sat.active ? 'darkblue' : GNSS_INFO[sat.gnss].color_darker}`,\r\n                color: 'black',\r\n                fontSize: '14px',\r\n                boxShadow: '3px 3px 8px 1px rgba(0,0,0,0.65)',\r\n                display: this.isDehighlighted(sat.gnss) ? 'none' : 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                opacity: sat.visible ? '1' : '0.3',\r\n\r\n                // this.state.highlighted && !this.isHl(sat.gnss) ? '0.1' : '1',\r\n                zIndex: sat.active ? 5 : 4\r\n            }}>\r\n            <span style={{ position: 'absolute' }}>{sat.prn}</span>\r\n        </div>\r\n    }\r\n\r\n    legendEntry = (color, borderColor, label, value) => <span\r\n        key={`legend_${label}`}\r\n        onClick={e => { this.setState({ selected: this.state.selected === value ? '' : value }) }}\r\n        onMouseEnter={e => { this.setState({ hovered: value }) }}\r\n        onMouseLeave={e => { this.setState({ hovered: '' }) }}\r\n        className={`noselect ${value ? \"clickable\" : ''}`}\r\n        style={{\r\n            transition: 'ease 0.15s',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            marginLeft: '16px',\r\n            marginRight: '16px',\r\n            fontSize: '15px',\r\n            opacity: this.isDehighlighted(value) && value ? '0.4' : '',\r\n            textDecoration: this.isSelected(value) ? 'underline' : ''\r\n        }}>\r\n        <div style={{\r\n            width: '14px',\r\n            height: '14px',\r\n            backgroundColor: color,\r\n            borderColor: borderColor,\r\n            borderStyle: 'solid',\r\n            borderWidth: '2px',\r\n            marginRight: '7px',\r\n            borderRadius: '50%',\r\n            display: 'inline-block',\r\n        }} />\r\n        {label}\r\n    </span>\r\n\r\n\r\n    render() {\r\n        let gnssStates = {}\r\n        for (const state of this.props.navStates) {\r\n            gnssStates[state.gnss_type] = {\r\n                satsActive: [],\r\n                satsVisible: [],\r\n                ...state\r\n            }\r\n        }\r\n\r\n        let satellites = this.props.satellites.map(\r\n            sat => ({\r\n                ...sat,\r\n                visible: gnssStates[sat.gnss] ? gnssStates[sat.gnss].satsVisible.map(s => s.prn).includes(sat.prn) : false,\r\n                active: gnssStates[sat.gnss] ? gnssStates[sat.gnss].satsActive.includes(sat.prn) : false,\r\n                // position: (sat.position && sat.position.satlatitude) ?\r\n                //     [sat.position.satlatitude, sat.position.satlongitude] : null\r\n            })\r\n        ).filter(sat => sat.position)\r\n        // .sort((y, x) => { return (x === y) ? 0 : x ? -1 : 1; })\r\n\r\n        let mapCenter = defaultPos\r\n\r\n        return (\r\n            <div className='main-content'>\r\n                <div style={{ padding: '5px', width: '100%', display: this.props.src ? '' : 'none' }}>\r\n                    <Alert variant='warning'>\r\n                        Satellite position data is not available when reading past data from a file.\r\n                    </Alert>\r\n                </div>\r\n                <Widget\r\n                    style={{ width: '100%', height: '800px', float: 'left' }}\r\n                    title={\r\n                        <div style={{ width: '100%', display: 'flex', justifyContent: 'center' }}>\r\n                            {/* Satellite Map */}\r\n\r\n                            {\r\n                                GNSS_INFO_LIST.map(gnss =>\r\n                                    this.legendEntry(gnss.color, gnss.color, gnss.name, gnss.label)\r\n                                )\r\n                            }\r\n                            <div style={{ height: '40px', width: '1px', backgroundColor: '#d0d0d0', marginLeft: '10px', marginRight: '10px' }}></div>\r\n                            {this.legendEntry('', 'darkblue', 'Active', '')}\r\n                            {this.legendEntry('lightgray', 'lightgray', 'Not Visible', '')}\r\n                        </div>\r\n                    }>\r\n\r\n\r\n                    <MapContainer style={{ height: '100%', width: '100%' }} center={[0, 0]} zoom={2} scrollWheelZoom={true}>\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        {/* \r\n                        <NightRegion\r\n                            fillColor='black'\r\n                            color='rgba(1,1,1,0)'\r\n                            refreshInterval={1000} // custom refresh rate in milliseconds, default set to 5000ms\r\n                        /> */}\r\n\r\n                        <Marker position={mapCenter}>\r\n                            <Popup>\r\n                                Location of the receiver station. <br /> FIIT rooftop.\r\n                            </Popup>\r\n                        </Marker>\r\n\r\n                        {satellites.map(sat =>\r\n                            <Marker\r\n                                key={`marker_${sat.name}`}\r\n                                icon={L.divIcon({\r\n                                    className: \"custom icon\",\r\n                                    html: ReactDOMServer.renderToString(this.icon(sat))\r\n                                })}\r\n                                position={sat.position}>\r\n                                <Popup>\r\n                                    {sat.name}.<br />\r\n                                    {\r\n                                        sat.active ? <b>Active</b> : 'Inactive'\r\n                                    }\r\n                                </Popup>\r\n                            </Marker>\r\n                        )}\r\n                    </MapContainer>\r\n                </Widget>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SatelliteMap;","import GPS from 'gps';\r\nimport React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { BiPause, BiPlay } from 'react-icons/bi';\r\nimport { Slider } from '@mui/material';\r\nimport _ from 'lodash';\r\n\r\nclass FileStream extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            inputStream: null,\r\n            duration: 0,\r\n            second: 0,\r\n        }\r\n    }\r\n\r\n    componentCleanup() {\r\n        clearInterval(this.state.inputStream)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.componentCleanup();\r\n        window.removeEventListener('beforeunload', this.componentCleanup);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props.src)\r\n        // console.log(this.props.da)\r\n\r\n        window.addEventListener('beforeunload', this.componentCleanup);\r\n\r\n        this.props.setLoadingPage(true)\r\n        this.nmeaFromFile(this.props.src.content)\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (newProps.src.content !== this.props.src.content) {\r\n            clearInterval(this.state.inputStream)\r\n            this.setState({\r\n                duration: 0,\r\n                second: 0\r\n            })\r\n            this.props.setLoadingPage(true)\r\n            this.nmeaFromFile(newProps.src.content)\r\n        }\r\n    }\r\n\r\n    getStandardDeviation = (mean, values) => Math.sqrt(\r\n        values\r\n            .map(x => Math.pow(x - mean, 2))\r\n            .reduce((a, b) => a + b, 0) / values.length\r\n    )\r\n\r\n    stateFromMessages(messages) {\r\n        let tracker = new GPS();\r\n        let sats = [];\r\n        let gnss = messages[0].slice(1, 3)\r\n\r\n        messages.forEach(message => {\r\n            tracker.update(message)\r\n\r\n            if (message.slice(3, 6) === 'GSV') {\r\n                sats = [...sats, ...GPS.Parse(message).satellites]\r\n            }\r\n        })\r\n\r\n        return {\r\n            ...tracker.state,\r\n            gnss_type: gnss,\r\n            satsVisible: sats.map(sat => ({\r\n                ...sat,\r\n                active: _.includes(tracker.state.satsActive, sat.prn),\r\n                prn: gnss === 'GL' ? sat.prn - 64 : sat.prn,\r\n                gnss: gnss\r\n            })),\r\n            satsActive: _.map(tracker.state.satsActive, prn => gnss === 'GL' ? prn - 64 : prn),\r\n            messages: messages\r\n        }\r\n    }\r\n\r\n    readLines(lines) {\r\n        let data = _.chain(lines)\r\n            .groupBy(line => line.slice(1, 3))\r\n            .map(lines =>\r\n                lines.reduce((prev, acc) => {\r\n                    let last = _.last(prev)\r\n\r\n                    return acc.slice(3, 6) === 'RMC' || _.last(last).slice(3, 6) === 'ZDA' ?\r\n                        [...prev, [acc]] :\r\n                        [...prev.slice(0, -1), [...last, acc]]\r\n                }, [])\r\n                    .filter(\r\n                        messages => _.some(messages, message => message.match(/\\$G.(?:ZDA|RMC|GGA),[0-9\\.]+,/))\r\n                    )\r\n                    .map(\r\n                        messages => this.stateFromMessages(messages)\r\n                    )\r\n            )\r\n            .filter(states => states.length)\r\n            .map(states =>\r\n                states.map((state, i) => {\r\n                    _.forEach(['lat', 'lon', 'alt', 'speed'], (attr) => {\r\n                        let values = states.slice(0, i).map(state => state[attr]).filter(v => v)\r\n                        let sum = _.sum(values)\r\n                        let mean = sum / i\r\n\r\n                        state[attr + '_mean'] = values.length ? mean : undefined\r\n                        state[attr + '_std'] = values.length ? this.getStandardDeviation(mean, values) : undefined\r\n                    })\r\n\r\n                    return state\r\n                })\r\n            )\r\n            .value()\r\n\r\n        return data\r\n    }\r\n\r\n    nmeaFromFile(text) {\r\n        let data = this.readLines(text)\r\n\r\n        // gnss systems present in NMEA file\r\n        let start = _.chain(data).map(states => states[0].time).min().value()\r\n        let end = _.chain(data).map(states => _.last(states).time).max().value()\r\n        let duration = (end - start) / 1000\r\n\r\n        console.log(data)\r\n        console.log(start);\r\n        console.log(end);\r\n\r\n        this.setState({\r\n            data: data,\r\n            start: start,\r\n            end: end,\r\n            duration: duration - 1,\r\n            inputStream: setInterval(() => {\r\n                if (!this.state.paused)\r\n                    this.nextSecond()\r\n            }, 1000),\r\n            paused: false\r\n        })\r\n    }\r\n\r\n    nextSecond = () => {\r\n        let nextSec = this.state.second + 1\r\n        if (nextSec === this.state.duration) {\r\n            this.setState({\r\n                paused: true\r\n            })\r\n            return\r\n        }\r\n        this.props.setLoadingPage(false)\r\n\r\n        this.setState({\r\n            second: nextSec\r\n        })\r\n    }\r\n\r\n    handlePlayPause = () => {\r\n        this.setState({\r\n            paused: !this.state.paused\r\n        })\r\n    }\r\n\r\n    handleMoveHandle = (value) => {\r\n        this.setState({\r\n            second: value,\r\n            paused: true\r\n        })\r\n    }\r\n\r\n    categorizeStates = (stateLists) => stateLists.reduce(\r\n        (acc, list) => ({ ...acc, [list[0].gnss_type]: list })\r\n        , {})\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.second !== this.state.second) {\r\n            // let i = this.state.data.findIndex(e => e.time === this.state.second)\r\n            let indices = _.map(this.state.data, states => {\r\n                let seconds = states.findIndex(\r\n                    state => state.time.getTime() >= (this.state.start.getTime() + this.state.second * 1000)\r\n                )\r\n                return seconds > 0 ? seconds - 1 : 0\r\n            })\r\n\r\n            let data = _.zip(this.state.data, indices).map(\r\n                ([states, index]) => states.slice(0, index + 1)\r\n            )\r\n            let navStates = data.map(states => _.last(states))\r\n\r\n            this.props.updateData(\r\n                {\r\n                    states: navStates,\r\n                    satellites: [],\r\n                    messages: navStates.map(state => state['messages']).flat()\r\n                },\r\n                this.categorizeStates(data),\r\n                this.state.second,\r\n                this.state.duration,\r\n                this.state.start\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                borderWidth: '0px',\r\n                padding: '10px',\r\n                fontSize: '14px',\r\n                boxShadow: '3px 3px 9px 2px rgba(0,0,0,0.05)',\r\n                display: 'flex',\r\n                borderRadius: '7px',\r\n                flexDirection: 'row',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-between',\r\n                overflow: 'hidden'\r\n            }}>\r\n                <div style={{ width: '320px', marginLeft: '20px', marginRight: '20px', display: 'flex', alignItems: 'center' }}>\r\n                    <Slider\r\n                        min={0}\r\n                        max={this.state.duration}\r\n                        value={this.state.second}\r\n                        onChange={e => {\r\n                            this.handleMoveHandle(parseInt(e.target.value))\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '50px', height: '100%' }}>\r\n                    {\r\n                        this.state.paused ?\r\n                            <BiPlay className=\"clickable lightenOpacity\" size={35} onClick={this.handlePlayPause} /> :\r\n                            <BiPause className=\"clickable lightenOpacity\" size={35} onClick={this.handlePlayPause} />\r\n                    }\r\n                </div>\r\n\r\n                <div style={{ width: '160px', display: 'flex', justifyContent: 'center', fontSize: '12px' }}>\r\n                    {new Date(this.state.second * 1000).toISOString().slice(11, 19)} / {new Date(this.state.duration * 1000).toISOString().slice(11, 19)}\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileStream;\r\n\r\n","import React from 'react';\r\nimport { GNSS_INFO } from '../../Pages/Dashboard/Dashboard';\r\nimport Widget from '../Widget';\r\n\r\nconst radarDimension = 150\r\n\r\nclass RadarWidget extends React.Component {\r\n\r\n    elevationToRadius = (e) => (90 - e) / 90\r\n    computeX = (e, a) => this.elevationToRadius(e) * Math.sin((180 - a) * (Math.PI / 180))\r\n    computeY = (e, a) => this.elevationToRadius(e) * Math.cos((180 - a) * (Math.PI / 180))\r\n\r\n    ref = React.createRef()\r\n\r\n    getDiameter() {\r\n        return this.ref.current ? (Math.min(this.ref.current.offsetHeight, this.ref.current.offsetWidth) * 0.8) / 2 : 0\r\n    }\r\n\r\n    icon(sat) {\r\n        return <div\r\n            className='clickable'\r\n            key={`${sat.gnss}_${sat.prn}`}\r\n            style={{\r\n                borderRadius: '50%',\r\n                width: '22px',\r\n                height: '22px',\r\n                textAlign: 'center',\r\n                backgroundColor: GNSS_INFO[sat.gnss].color,\r\n                padding: '0px',\r\n                // border: `2px solid ${GNSS_INFO[sat.gnss].color_lighter}`,\r\n                // outline: `2px solid ${sat.active ? 'darkblue' : GNSS_INFO[sat.gnss].color}`,\r\n                borderStyle:'solid',\r\n                borderWidth: '2px',\r\n                borderColor: sat.active ? 'darkblue' : GNSS_INFO[sat.gnss].color,\r\n                color: 'black',\r\n                fontSize: '12px',\r\n                // transform: `translate(${radarDimension - 10}px, ${radarDimension - 10}px)`,\r\n                position: 'absolute',\r\n                // left: `${this.computeX(sat.elevation, sat.azimuth) * radarDimension}px`,\r\n                left: `calc(50% - 11px + ${this.computeX(sat.elevation, sat.azimuth) * this.getDiameter()}px)`,\r\n                // top: `${this.computeY(sat.elevation, sat.azimuth) * radarDimension}px`,\r\n                top: `calc(50% - 11px + ${this.computeY(sat.elevation, sat.azimuth) * this.getDiameter()}px)`,\r\n                // transform: `translate(50%, 50%)`,\r\n                transition: 'cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.3s',\r\n                zIndex: 100\r\n            }}>\r\n            <div style={{ width: '100%', height: '100%', position: 'relative', display: 'flex', alignItems: 'center' }}>\r\n                <span style={{ position: 'absolute', left: '0px', right: '0px' }}>\r\n                    {sat.prn}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        // let satellites = this.props.navStates.reduce(\r\n        //     (prev, curr) => [...prev, ...curr.satsVisible], []\r\n        // ).filter(s => s.azimuth)\r\n\r\n        // satellites = [\r\n        //     { prn: 5, gnss: 'GP', active: false, azimuth: 90, elevation: 0 }\r\n        // ]\r\n\r\n        return <Widget \r\n        widgetKey={this.props.widgetKey}\r\n        removeItem={this.props.removeItem}\r\n        style={{\r\n            width: this.props.width ? this.props.width : '100%',\r\n            height: this.props.height ? this.props.height : '100%',\r\n            float: 'left'\r\n        }} title=\"Satellite Radar\">\r\n            <div\r\n                ref={this.ref}\r\n                // className='square'\r\n                style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    // display: 'flex',\r\n                    // justifyContent: 'center',\r\n                    // alignItems: 'center',\r\n                    position: 'relative',\r\n                    // paddingBottom:'auto',\r\n                    // paddingLeft: 'auto'\r\n                }}>\r\n\r\n                <img src='protractor_3.svg' width='100%' height='100%' style={{ position: 'absolute' }} />\r\n                {\r\n                    this.props.navStates.reduce(\r\n                        (prev, curr) => [...prev, ...curr.satsVisible], []\r\n                    ).filter(s => s.azimuth).map(sat => this.icon(sat))\r\n                }\r\n                {/* <div style={{\r\n                    width: `${radarDimension * 2}px`,\r\n                    height: `${radarDimension * 2}px`,\r\n                    backgroundColor: '#f5f9ff',\r\n                    borderStyle: 'solid',\r\n                    borderWidth: '1px',\r\n                    borderRadius: '50%',\r\n                    position: 'relative',\r\n                    zIndex: 5\r\n                }}>\r\n                    <div style={{\r\n                        width: `${radarDimension * 4 / 3}px`,\r\n                        height: `${radarDimension * 4 / 3}px`,\r\n                        borderStyle: 'solid',\r\n                        borderWidth: '1px',\r\n                        backgroundColor: '#ebf0f7',\r\n                        // opacity: 0.15,\r\n                        borderColor: '#aeb5bf',\r\n                        position: 'absolute',\r\n                        borderRadius: '50%',\r\n                        transform: `translate(${(radarDimension / 3) - 2}px, ${(radarDimension / 3) - 2}px)`,\r\n                        zIndex: 6\r\n                    }} />\r\n\r\n                    <div style={{\r\n                        width: `${radarDimension * 2 / 3}px`,\r\n                        height: `${radarDimension * 2 / 3}px`,\r\n                        borderStyle: 'solid',\r\n                        borderWidth: '1px',\r\n                        backgroundColor: '#f5f9ff',\r\n                        // opacity: 0.15,\r\n                        borderColor: '#aeb5bf',\r\n                        position: 'absolute',\r\n                        borderRadius: '50%',\r\n                        transform: `translate(${(radarDimension / 3 * 2) - 2}px, ${(radarDimension / 3 * 2) - 2}px)`,\r\n                        zIndex: 6\r\n                    }} />\r\n\r\n                    <div id=\"center\" style={{\r\n                        width: '4px',\r\n                        height: '4px',\r\n                        borderRadius: '50%',\r\n                        backgroundColor: 'black',\r\n                        transform: `translate(${radarDimension - 2}px, ${radarDimension - 2}px)`,\r\n                        position: 'absolute',\r\n                        zIndex: 7\r\n                    }} />\r\n\r\n                    {\r\n                        satellites.map(sat => this.icon(sat))\r\n                    }\r\n                </div> */}\r\n\r\n            </div>\r\n        </Widget>\r\n    }\r\n}\r\n\r\nexport default RadarWidget;","import React from 'react';\r\nimport Widget from '../Widget';\r\nimport { Table, Accordion, Card } from 'react-bootstrap';\r\nimport { CircleFlag as Flag } from 'react-circle-flags'\r\nimport AccordionBody from 'react-bootstrap/esm/AccordionBody';\r\nimport { PARAMS, PARAMS_LIST } from '../../Pages/Dashboard/Dashboard';\r\nimport SimpleBar from 'simplebar-react';\r\nimport 'simplebar/dist/simplebar.min.css';\r\n\r\n\r\nconst GNSS_LABEL = {\r\n    'GP': <span style={{ display: 'flex', alignItems: 'center', fontSize: '14px' }}><Flag style={{ marginRight: '5px' }} countryCode={'us'} height=\"14\" />GPS</span>,\r\n    'GA': <span style={{ display: 'flex', alignItems: 'center', fontSize: '14px' }}><Flag style={{ marginRight: '5px' }} countryCode={'european_union'} height=\"14\" />Galileo</span>,\r\n    'GL': <span style={{ display: 'flex', alignItems: 'center', fontSize: '14px' }}><Flag style={{ marginRight: '5px' }} countryCode={'ru'} height=\"14\" />GLONASS</span>,\r\n    'GB': <span style={{ display: 'flex', alignItems: 'center', fontSize: '14px' }}><Flag style={{ marginRight: '5px' }} countryCode={'cn'} height=\"14\" />BeiDou</span>,\r\n}\r\n\r\nconst tdStyle = {\r\n    display: 'flex',\r\n    fontSize: '14px',\r\n    // minHeight: '30px',\r\n    // height:'37px',\r\n    alignItems: 'center'\r\n}\r\n// const MAIN_GNSS = ['GPS 🇺🇸']\r\n\r\nclass StatusWidget extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showInactive: false,\r\n            expanded: true,\r\n            inTransition: false,\r\n            selected: ''\r\n        }\r\n\r\n        this.filterInactive = this.filterInactive.bind(this)\r\n    }\r\n\r\n    filterInactive(s) {\r\n        if (this.state.showInactive)\r\n            return true\r\n        if (this.props.active.includes(s.prn))\r\n            return true\r\n        return false\r\n    }\r\n\r\n    getInactive() {\r\n        return this.props.visible.filter(s => !this.props.active.includes(s.prn))\r\n    }\r\n\r\n    formatNavState = ({ ...data }) => ({\r\n        label: data.gnss_type ? data.gnss_type : 'GP',\r\n        lat: {\r\n            label: 'Latitude',\r\n            value: data.lat ? data.lat.toFixed(7) : null,\r\n            unit: '°',\r\n            extends: true,\r\n            mean: data.lat_mean,\r\n            std: data.lat_std\r\n        },\r\n        lon: { label: 'Longitude', value: data.lon ? data.lon.toFixed(7) : null, unit: '°', extends: true, mean: data.lon_mean, std: data.lon_std },\r\n        alt: { label: 'Altitude', value: data['alt'], unit: ' m', extends: true, mean: data.alt_mean, std: data.alt_std },\r\n        speed: { label: 'Speed', value: data.speed ? data.speed.toFixed(7) : null, unit: ' m/s', extends: true, mean: data.speed_mean, std: data.speed_std },\r\n        vdop: { label: 'Vertical DOP', value: data['vdop'], unit: '' },\r\n        hdop: { label: 'Horizontal DOP', value: data['hdop'], unit: '' },\r\n        pdop: { label: 'Positional DOP', value: data['pdop'], unit: '' },\r\n        // time: { label: 'UTC Time', value: new Date(data['time']).toLocaleTimeString(), unit: '' },\r\n        usedSatellites: {\r\n            label: 'Active Satellites',\r\n            value: data['satsVisible'] ? `${data['satsActive'].length}/${data['satsVisible'].length}` : null,\r\n            unit: ''\r\n        },\r\n        // active: {label: 'Activity', value: data.satsActive && data.satsActive.length>0 ? 'Active' : 'Inactive', unit: '' },\r\n    })\r\n\r\n    tdStyle = (state) => ({\r\n        display: 'flex',\r\n        fontSize: '14px',\r\n        minHeight: '30px',\r\n        alignItems: 'center',\r\n        color: state.satsActive && state.satsActive.length > 0 ? '' : '#afafaf'\r\n    })\r\n\r\n    table = (states) => {\r\n        return <Accordion flush style={{ width: '100%' }}>\r\n            {/* <div style={{\r\n                width: '100%',\r\n                borderBottomStyle: 'solid',\r\n                borderBottomWidth: '2px',\r\n                padding: '0px 40px 0px 20px',\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n            }}>\r\n                <div id=\"gnss_flags\" style={{ width: '20%', display: 'inline-block' }}></div>\r\n                {\r\n                    states.length ? states.map(\r\n                        (state, i) => <div style={{ width: '20%', display: 'inline-block', paddingBottom: '8px' }} key={`tab_header_${i}`}>\r\n                            {GNSS_LABEL[state.gnss_type]}\r\n                        </div>\r\n                    ) : <div style={{ width: '100%', color: 'gray', textAlign: 'start' }}><i>No receivers.</i></div>\r\n                }\r\n                <div style={{ marginLeft: 'auto' }}></div>\r\n            </div> */}\r\n            {\r\n                PARAMS_LIST.map(({ name, label, display }, i) =>\r\n                    label in this.props.exactValues ? <Accordion.Item key={`row_${i}`} eventKey={`row_${i}`}>\r\n                        <Accordion.Header className=\"clickable\" style={{\r\n                            display: 'flex',\r\n                            height: '37px'\r\n                        }}>\r\n                            <div style={{ width: 'calc((100% - 20px)*0.2)' }}>\r\n                                <b style={tdStyle}>{name}</b>\r\n                            </div>\r\n                            {\r\n                                states.map((state, j) =>\r\n                                    <div style={{ flex: 1 }} key={`table_cell_${i}_${j}`}>\r\n                                        <span style={this.tdStyle(state)}>\r\n                                            {display(state[label])}\r\n                                        </span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </Accordion.Header>\r\n                        <Accordion.Body style={{ padding: '5px 40px 5px 20px', backgroundColor: '#f7f7f7' }}>\r\n                            <div style={tdStyle} key={`extra_row_${i}`}>\r\n                                <div style={{ width: '20%' }}>\r\n                                    <b style={tdStyle}>Expected</b>\r\n                                </div>\r\n                                {\r\n                                    states.map((state, j) => {\r\n                                        return <div style={{ flex: 1 }} key={`table_cell_${i}_${j}`}>\r\n                                            <span style={this.tdStyle(state)}>\r\n                                                {display(this.props.exactValues[label])}\r\n                                            </span>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                                <div style={{ margin: 'auto' }}></div>\r\n                            </div>\r\n                            {\r\n                                [\r\n                                    { name: 'Sigma', key: 'std' },\r\n                                    { name: 'Mean', key: 'mean' }\r\n                                ].map((row, i) => <div style={tdStyle} key={`extra_row_${i}`}>\r\n                                    <div style={{ width: '20%' }}>\r\n                                        <b style={tdStyle}>{row.name}</b>\r\n                                    </div>\r\n                                    {\r\n                                        states.map((state, j) => {\r\n                                            return <div style={{ flex: 1 }} key={`table_cell_${i}_${j}`}>\r\n                                                <span style={this.tdStyle(state)}>\r\n                                                    {display(state[`${label}_${row.key}`])}\r\n                                                </span>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                    <div style={{ margin: 'auto' }}></div>\r\n                                </div>)\r\n                            }\r\n                        </Accordion.Body>\r\n                    </Accordion.Item> : <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-around',\r\n                        height: '37px',\r\n                        padding: '16px 20px 16px 20px',\r\n                        position: 'relative',\r\n                        alignItems: 'center',\r\n                        borderBottom: '1px solid rgba(0, 0, 0, 0.125)'\r\n                    }}>\r\n                        <div style={{ width: '20%' }}>\r\n                            <b style={tdStyle}>{name}</b>\r\n                        </div>\r\n                        {\r\n                            states.map((state, j) =>\r\n                                <div style={{ flex: 1 }} key={`table_cell_${i}_${j}`}>\r\n                                    <span style={this.tdStyle(state)}>{\r\n                                        display(state[label])\r\n                                    }</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        <div style={{ marginLeft: 'auto', width: '20px', height: '20px' }} />\r\n                    </div>\r\n                )\r\n            }\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                height: '37px',\r\n                padding: '16px 20px 16px 20px',\r\n                position: 'relative',\r\n                alignItems: 'center',\r\n                borderBottom: '1px solid rgba(0, 0, 0, 0.125)'\r\n            }}>\r\n                <div style={{ width: '20%' }}>\r\n                    <b style={tdStyle}>Active Satellites</b>\r\n                </div>\r\n                {\r\n                    states.map((state, j) =>\r\n                        <div style={{ flex: 1 }} key={`table_cell_sats_${j}`}>\r\n                            <span style={this.tdStyle(state)}>\r\n                                {state.satsActive.length} / {state.satsVisible.length}\r\n                            </span>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div style={{ marginLeft: 'auto', width: '20px', height: '20px' }} />\r\n            </div>\r\n        </Accordion>\r\n    }\r\n\r\n    getValues(data, key) {\r\n        return data.map(item => item[key])\r\n    }\r\n\r\n    getStandardDeviation = (mean, values) => Math.sqrt(\r\n        values\r\n            .map(x => Math.pow(x - mean, 2))\r\n            .reduce((a, b) => a + b, 0) / values.length\r\n    )\r\n\r\n    getMean = (values) => values.reduce((a, b) => a + b, 0) / values.length\r\n\r\n    calculateExtra = (states) => {\r\n        ['lat', 'lon', 'alt', 'speed', 'vdop'].forEach(key => {\r\n            states = states.map(state => {\r\n                if (this.props.data && this.props.data[state.label]) {\r\n                    let values = this.getValues(this.props.data[state.label], key).filter(v => v)\r\n                    let mean = this.getMean(values)\r\n                    let std = this.getStandardDeviation(mean, values)\r\n\r\n                    return {\r\n                        ...state,\r\n                        [`${key}_expected`]: 0,\r\n                        [`${key}_mean`]: mean ? Math.round(mean) : 'N/A',\r\n                        [`${key}_std`]: std ? Math.round(std) : 'N/A'\r\n                    }\r\n                }\r\n\r\n                return state\r\n\r\n            });\r\n        });\r\n\r\n        return states\r\n    }\r\n\r\n    render() {\r\n        // let states = this.state.expanded ? this.props.status.map(\r\n        //     state => this.formatNavState(state)\r\n        // ) : [this.formatNavState(this.props.status[0])];\r\n\r\n        return <Widget\r\n            widgetKey={this.props.widgetKey}\r\n            removeItem={this.props.removeItem}\r\n            title=\"Current Status\"\r\n            style={{\r\n                width: this.props.width ? this.props.width : '100%',\r\n                height: this.props.height ? this.props.height : '100%',\r\n                float: 'left'\r\n            }}>\r\n            <div style={{\r\n                position: 'relative',\r\n                height: '100%',\r\n                overflowY: 'hidden',\r\n                fontSize: '14px'\r\n            }}>\r\n\r\n                <SimpleBar style={{ marginTop: '37px', height: 'calc(100% - 30px)' }}>\r\n                    {\r\n                        this.table(this.props.status)\r\n                    }\r\n                </SimpleBar>\r\n\r\n\r\n                <div style={{\r\n                    width: '100%',\r\n                    // borderBottomStyle: 'solid',\r\n                    borderBottomWidth: '1px',\r\n                    boxShadow: '0px 7px 10px -8px rgba(0,0,0,0.5)',\r\n                    padding: '0px 40px 0px 20px',\r\n                    // marginBottom: '8px',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    // zIndex: 999,\r\n                    position: 'absolute',\r\n                    top: '0px'\r\n                }}>\r\n                    <div id=\"gnss_flags\" style={{ width: '20%', display: 'inline-block' }}></div>\r\n                    {\r\n                        this.props.status.length ? this.props.status.map(\r\n                            (state, i) => <div style={{\r\n                                flex: 1,\r\n                                display: 'inline-block',\r\n                                paddingBottom: '10px'\r\n                            }} key={`tab_header_${i}`}>\r\n                                {GNSS_LABEL[state.gnss_type]}\r\n                            </div>\r\n                        ) : <div style={{ width: '100%', color: 'gray', textAlign: 'start', paddingBottom: '10px' }}><i>No active receivers.</i></div>\r\n                    }\r\n                    <div style={{ marginLeft: 'auto' }}></div>\r\n                </div>\r\n            </div>\r\n        </Widget>\r\n    }\r\n}\r\n\r\nexport default StatusWidget;","import { useMapEvent, useMap, MapContainer, TileLayer, Rectangle } from 'react-leaflet';\r\nimport { useMemo, useState, useCallback } from 'react';\r\nimport { useEventHandlers } from '@react-leaflet/core';\r\n\r\n// Classes used by Leaflet to position controls\r\nconst POSITION_CLASSES = {\r\n    bottomleft: 'leaflet-bottom leaflet-left',\r\n    bottomright: 'leaflet-bottom leaflet-right',\r\n    topleft: 'leaflet-top leaflet-left',\r\n    topright: 'leaflet-top leaflet-right',\r\n}\r\n\r\nconst BOUNDS_STYLE = { weight: 1 }\r\n\r\nfunction MinimapBounds({ parentMap, zoom }) {\r\n    const minimap = useMap()\r\n\r\n    // Clicking a point on the minimap sets the parent's map center\r\n    const onClick = useCallback(\r\n        (e) => {\r\n            parentMap.setView(e.latlng, parentMap.getZoom())\r\n        },\r\n        [parentMap],\r\n    )\r\n    useMapEvent('click', onClick)\r\n\r\n    // Keep track of bounds in state to trigger renders\r\n    const [bounds, setBounds] = useState(parentMap.getBounds())\r\n    const onChange = useCallback(() => {\r\n        setBounds(parentMap.getBounds())\r\n        // Update the minimap's view to match the parent map's center and zoom\r\n        minimap.setView(parentMap.getCenter(), zoom)\r\n    }, [minimap, parentMap, zoom])\r\n\r\n    // Listen to events on the parent map\r\n    const handlers = useMemo(() => ({ move: onChange, zoom: onChange }), [onChange])\r\n    useEventHandlers({ instance: parentMap }, handlers)\r\n\r\n    return <Rectangle bounds={bounds} pathOptions={BOUNDS_STYLE} />\r\n}\r\n\r\nfunction MinimapControl({ position, zoom }) {\r\n    const parentMap = useMap()\r\n    const mapZoom = zoom || 0\r\n\r\n    // Memoize the minimap so it's not affected by position changes\r\n    const minimap = useMemo(\r\n        () => (\r\n            <MapContainer\r\n                style={{ height: 80, width: 80 }}\r\n                center={parentMap.getCenter()}\r\n                zoom={mapZoom}\r\n                dragging={false}\r\n                doubleClickZoom={false}\r\n                scrollWheelZoom={false}\r\n                attributionControl={false}\r\n                zoomControl={false}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                <MinimapBounds parentMap={parentMap} zoom={mapZoom} />\r\n            </MapContainer>\r\n        ),\r\n        [mapZoom, parentMap],\r\n    )\r\n\r\n    const positionClass =\r\n        (position && POSITION_CLASSES[position]) || POSITION_CLASSES.topright\r\n    return (\r\n        <div className={positionClass}>\r\n            <div className=\"leaflet-control leaflet-bar\">{minimap}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MinimapControl;","import { useEffect, useState } from 'react';\r\nimport { TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\r\nimport * as L from \"leaflet\";\r\nimport MinimapControl from './MinimapControl';\r\n\r\nconst gnssColors = {\r\n    'GL': '#ff6384',\r\n    'GP': '#ffcd45',\r\n    'GA': '#36a2eb',\r\n    'GB': '#9966ff'\r\n}\r\n\r\nfunction Map({ center, receivers }) {\r\n    const map = useMap();\r\n\r\n    const LeafIcon = L.Icon.extend({\r\n        options: {}\r\n    });\r\n\r\n    const events = useMapEvents({\r\n        click(e) {\r\n            console.log(e.latlng)\r\n        }\r\n    })\r\n\r\n    const icons = {\r\n        'GL': icon(gnssColors['GL']),\r\n        'GP': icon(gnssColors['GP']),\r\n        'GA': icon(gnssColors['GA']),\r\n        'GB': icon(gnssColors['GB'])\r\n    }\r\n\r\n    function icon(color) {\r\n        return new LeafIcon({\r\n            iconUrl: `https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|${color.slice(1)}&chf=a,s,ee00FFFF`\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        map.panTo(center)\r\n    }, [center, map])\r\n\r\n    return (\r\n        <div>\r\n            <TileLayer\r\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <MinimapControl position=\"topright\" />\r\n            {/* <MapConsumer>\r\n            {(map) => {\r\n                map.setView(this.state.position, 10)\r\n            }}\r\n        </MapConsumer> */}\r\n\r\n            <Marker position={center}>\r\n                <Popup>\r\n                    Location of the NL-8004U receiver. <br /> FIIT rooftop.\r\n                </Popup>\r\n            </Marker>\r\n            {receivers.filter(r => r.position[0]) ? receivers.filter(r => r.position[0]).map(r =>\r\n                <Marker key={`marker_${r.gnss}`} icon={icons[r.gnss]} position={r.position}>\r\n                    <Popup>\r\n                        Location of the NL-8004U receiver. <br /> FIIT rooftop.\r\n                    </Popup>\r\n                </Marker>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport { MapContainer, useMapEvents } from 'react-leaflet';\r\nimport Map from './Map';\r\nimport Widget from '../Widget';\r\nimport { defaultPos } from '../../Pages/Dashboard/Dashboard';\r\n\r\nclass MapWidget extends React.Component {\r\n    render() {\r\n        let receivers = this.props.navStates.map(\r\n            state => ({\r\n                gnss: state.gnss_type,\r\n                position: [state.lat, state.lon]\r\n            })\r\n        )\r\n\r\n        return <Widget widgetKey={this.props.widgetKey} removeItem={this.props.removeItem} style={{\r\n            width: this.props.width ? this.props.width : '100%',\r\n            height: this.props.height ? this.props.height : '100%',\r\n            float: 'left'\r\n        }}\r\n            title=\"Receiver Location\">\r\n            <MapContainer style={{ height: '100%', width: '100%' }} center={this.props.position} zoom={18} scrollWheelZoom={false}>\r\n                <Map center={this.props.position} receivers={receivers} />\r\n            </MapContainer>\r\n        </Widget>\r\n    }\r\n}\r\n\r\nexport default MapWidget;","import React from 'react';\r\nimport Widget from '../Widget';\r\n// import SatelliteBar from './SatelliteBar\r\n// import { Form } from 'react-bootstrap';\r\n// import { CanvasJSChart } from 'canvasjs-react-charts';\r\n// import { Bar } from 'react-chartjs-2';\r\n\r\nimport { Chart as ChartJS, registerables } from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2'\r\nimport { GNSS_INFO, GNSS_INFO_LIST } from '../../Pages/Dashboard/Dashboard';\r\nChartJS.register(...registerables);\r\n\r\nclass SatWidget extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            showInactive: false\r\n        }\r\n\r\n        this.filterInactive = this.filterInactive.bind(this)\r\n    }\r\n\r\n    filterInactive(s) {\r\n        if (this.state.showInactive)\r\n            return true\r\n        if (this.props.active.includes(s.prn))\r\n            return true\r\n        return false\r\n    }\r\n\r\n    getInactive() {\r\n        return this.props.visible.filter(s => !this.props.active.includes(s.prn))\r\n    }\r\n\r\n    satLabel = (prn, gnss) => {\r\n        // return this.props.satellites.filter(s=>s.prn === prn && s.gnss === gnss)[0].name\r\n\r\n        if (gnss === 'GP') {\r\n            return `G${prn}`\r\n        }\r\n        if (gnss === 'GL') {\r\n            return `R${prn}`\r\n            // return `R${prn - 64}`\r\n        }\r\n        if (gnss === 'GA') {\r\n            return `E${prn}`\r\n        }\r\n        if (gnss === 'GB') {\r\n            return `B${prn}`\r\n        }\r\n    }\r\n\r\n    satName = (label) => {\r\n        if (!this.props.satellites.length) {\r\n            return label\r\n        }\r\n        return this.props.satellites.filter(s => {\r\n            return s.prn === parseInt(label.slice(1)) && s.gnss === {\r\n                'R': 'GL',\r\n                'E': 'GA',\r\n                'G': 'GP',\r\n                'B': 'GB'\r\n            }[label.slice(0, 1)]\r\n        })[0].name\r\n    }\r\n\r\n    satColor = (gnss) => {\r\n        return {\r\n            'GP': 'rgba(255, 205, 69, 0.4)',\r\n            'GL': 'rgba(255, 99, 132, 0.4)',\r\n            'GA': 'rgba(54, 162, 235, 0.4)',\r\n            'GB': 'rgba(153, 102, 255, 0.4)'\r\n        }[gnss]\r\n    }\r\n\r\n    satBorder = (gnss, active) => {\r\n        return active ? 'darkblue' : GNSS_INFO[gnss].color\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // let displayed = this.props.visible\r\n        // .filter(this.filterInactive)\r\n\r\n        let satellites = this.props.states.reduce(\r\n            (prev, curr) => curr.satsVisible ? [\r\n                ...prev,\r\n                ...curr.satsVisible.sort((a, b) => a.prn < b.prn ? -1 : 1)\r\n            ] : prev, []\r\n        )\r\n\r\n        let data = {\r\n            labels: satellites.map(sat => this.satLabel(sat.prn, sat.gnss)),\r\n            datasets: [\r\n                // ...GNSS_INFO_LIST.map(gnss => ({\r\n                //     data: [],\r\n                //     backgroundColor: gnss.color_lighter,\r\n                //     borderColor: gnss.color,\r\n                //     label: gnss.name\r\n                // })),\r\n                {\r\n                    data: satellites.map(sat => sat.snr),\r\n                    backgroundColor: satellites.map(sat => GNSS_INFO[sat.gnss].color_lighter),\r\n                    borderColor: satellites.map(sat => this.satBorder(sat.gnss, sat.active)),\r\n                    borderWidth: 2,\r\n                    label: 'SNR'\r\n                }]\r\n        }\r\n\r\n\r\n        const options = {\r\n            showLegend: false,\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true,\r\n                    suggestedMax: 100,\r\n                    ticks: {\r\n                        callback: (value, index, ticks) => index % 2 ? '' : value + 'dB'\r\n                    }\r\n                }\r\n            },\r\n            plugins: {\r\n                tooltip: {\r\n                    callbacks: {\r\n                        title: (context) => {\r\n                            return this.satName(context[0].label)\r\n                        },\r\n                        label: (context) => {\r\n                            return context.dataset.label + ': ' + context.parsed.y + 'dB'\r\n                        }\r\n                    }\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        // boxWidth: 20,\r\n                        // color: 'black',\r\n                        generateLabels: () => [\r\n                            ...GNSS_INFO_LIST.map(\r\n                                gnss => ({\r\n                                    // borderRadius: 2,\r\n                                    text: gnss.name,\r\n                                    fillStyle: gnss.color_lighter,\r\n                                    strokeStyle: gnss.color,\r\n                                    lineWidth: 2\r\n                                })\r\n                            ),\r\n                            {\r\n                                // borderRadius: 2,\r\n                                text: 'Active',\r\n                                fillStyle: 'white',\r\n                                strokeStyle: 'darkblue',\r\n                                lineWidth: 2\r\n                            }\r\n                        ]\r\n                    }\r\n                    // display: false\r\n                }\r\n            }\r\n        }\r\n\r\n        return <Widget\r\n            widgetKey={this.props.widgetKey}\r\n            removeItem={this.props.removeItem}\r\n            style={{\r\n                width: this.props.width ? this.props.width : '100%',\r\n                height: this.props.height ? this.props.height : '100%',\r\n                float: 'left'\r\n            }} title={\r\n                <div>\r\n                    Visible Satellites ({satellites.length})\r\n                </div>\r\n            }>\r\n            <div style={{ height: '100%', overflow: 'hidden', position: 'relative' }}>\r\n                {/* <CanvasJSChart options={options} /> */}\r\n                <Chart type={'bar'} data={data} options={options} />\r\n            </div>\r\n        </Widget>\r\n    }\r\n}\r\n\r\nexport default SatWidget;","import React from 'react';\r\nimport { CanvasJSChart } from 'canvasjs-react-charts';\r\nimport { Form, Card, Button } from 'react-bootstrap';\r\nimport { GNSS_INFO_LIST } from '../../Pages/Dashboard/Dashboard';\r\nimport _ from 'lodash';\r\n\r\nconst defaultDataOptions = {\r\n    showInLegend: true,\r\n    type: \"line\",\r\n    markerSize: 0\r\n}\r\n\r\nconst CHART_COLOR = '#fafafa'\r\n\r\nclass Chart extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            mode: 'Altitude',\r\n            gnss: 'GP',\r\n            dual: false\r\n        }\r\n\r\n        this.handleModeChange = this.handleModeChange.bind(this)\r\n        this.contentFormatter = this.contentFormatter.bind(this)\r\n        this.formatData = this.formatData.bind(this)\r\n        // this.params = this.params.bind(this)\r\n    }\r\n\r\n\r\n    handleModeChange(selected) {\r\n        this.setState({\r\n            mode: selected\r\n        })\r\n    }\r\n\r\n    handleGNSSChange(selected) {\r\n        this.setState({\r\n            gnss: selected\r\n        })\r\n    }\r\n\r\n    formatData() {\r\n        return GNSS_INFO_LIST.filter(gnss=>gnss.label==='GP').map(({ label, name }) => ({\r\n            ...defaultDataOptions,\r\n            name: name,\r\n            dataPoints: _.map(this.props.data[label], e => ({\r\n                time: e.time,\r\n                x: new Date(e.time),\r\n                y: e[this.props.mode.parameter]\r\n            }))\r\n        }))\r\n    }\r\n\r\n    contentFormatter(e) {\r\n        var content = \" \";\r\n        content += `time <strong>${new Date(e.entries[0].dataPoint.time).toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, \"$1\")}</strong><br/>`\r\n        for (var i = 0; i < e.entries.length; i++) {\r\n            content += `${e.entries[i].dataSeries.name} <strong>${e.entries[i].dataPoint.y} </strong><br/>`\r\n        }\r\n        // content += `satsVisible <strong>${e.entries[0].dataPoint.satsVisible.length}</strong><br/>`\r\n        // content += `satsActive <strong>${e.entries[0].dataPoint.satsActive.length}</strong><br/>`\r\n        return content;\r\n    }\r\n\r\n    getBoundaries(values, slack) {\r\n        if (!this.props.data.length) {\r\n            return {\r\n                minimum: 0,\r\n                maximum: 1\r\n            }\r\n        }\r\n\r\n        let min_val = Math.min(...values)\r\n        let max_val = Math.max(...values)\r\n\r\n        if (min_val === max_val) {\r\n            slack = 1\r\n        }\r\n\r\n        return {\r\n            minimum: min_val - slack,\r\n            maximum: max_val + slack\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const options = {\r\n            backgroundColor: CHART_COLOR,\r\n            // height: this.state.dual ? null : 475,\r\n            // width: 630,\r\n            animationEnabled: true,\r\n            zoomEnabled: true,\r\n            panEnabled: true,\r\n            toolTip: {\r\n                shared: true,\r\n                contentFormatter: this.contentFormatter\r\n            },\r\n            legend: {\r\n                dockInsidePlotArea: true\r\n            },\r\n            axisY: {\r\n                // ...this.getBoundaries(values, 0),\r\n                // interlacedColor: \"#f5f5f5\",\r\n                gridColor: \"#f0f0f0\",\r\n                // stripLines: this.params().length === 1 ? [{\r\n                //     showOnTop: false,\r\n                //     thickness: 1,\r\n                //     value: mean,\r\n                //     label: `Mean: ${mean.toFixed(2)}`,\r\n                //     labelPlacement: 'inside',\r\n                //     labelAlign: 'far',\r\n                //     labelFontSize: 10,\r\n                //     labelFontFamily: 'Roboto',\r\n                //     color: '#7daeff',\r\n                //     labelFontColor: '#333333'\r\n                // }] : []\r\n            },\r\n            axisX: {\r\n                tickLength: 20,\r\n                tickColor: 'white',\r\n                labelFontSize: 0\r\n            },\r\n            data: this.formatData()\r\n        }\r\n\r\n        return (\r\n            <Card style={{\r\n                ...this.props.style,\r\n                width: this.props.width,\r\n                height: this.props.height,\r\n                position: 'relative',\r\n                padding: '20px',\r\n                overflow: 'hidden',\r\n                margin: '1px',\r\n                backgroundColor: CHART_COLOR,\r\n                // borderColor: CHART_COLOR\r\n            }}>\r\n                {/* {this.cancelButton()} */}\r\n                <CanvasJSChart options={options} />\r\n                {/* <LineChart\r\n                    type={'line'} \r\n                    data={data} \r\n                    // options={options} \r\n                />\r\n                {this.modeDropdown()}\r\n                {this.gnssDropdown()} */}\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chart","import React, { useEffect } from 'react';\r\nimport { Form, Card, Button } from 'react-bootstrap';\r\nimport { Chart as ChartJS, registerables } from 'chart.js';\r\nimport { Tooltip } from 'chart.js';\r\nimport { Chart } from 'react-chartjs-2'\r\nimport 'chartjs-adapter-moment';\r\nimport annotationPlugin from 'chartjs-plugin-annotation';\r\nimport zoomPlugin from 'chartjs-plugin-zoom';\r\nimport { GNSS_INFO, GNSS_INFO_LIST, PARAMS } from '../../Pages/Dashboard/Dashboard';\r\n\r\n\r\nChartJS.register(...registerables);\r\nChartJS.register(zoomPlugin);\r\nChartJS.register(annotationPlugin)\r\n\r\nvar _ = require('lodash');\r\n\r\nfunction Chart2(props) {\r\n\r\n    const data = {\r\n        labels: _.map(props.data['GP'], e => e.time),\r\n        datasets: GNSS_INFO_LIST.map((gnss, i) => ({\r\n            label: gnss.name,\r\n            data: _.map(props.data[gnss.label], e => e[props.mode.parameter]),\r\n            pointRadius: 0,\r\n            lineTension: 0.25,\r\n            borderColor: gnss.color,\r\n            backgroundColor: gnss.color_lighter,\r\n            borderWidth: 2,\r\n        })),\r\n    }\r\n\r\n    return (\r\n        <div style={{ padding: '0px', height: '100%', width: '100%', position: 'relative' }}>\r\n            <Chart\r\n                type={'line'}\r\n                data={data}\r\n                options={{\r\n                    // parsing: false,\r\n                    plugins: {\r\n                        zoom: {\r\n                            pan: {\r\n                                enabled: true,\r\n                                modifierKey: 'ctrl',\r\n                            },\r\n                            zoom: {\r\n                                drag: {\r\n                                    enabled: true,\r\n                                },\r\n                                mode: 'xy',\r\n                            },\r\n                        },\r\n                        // decimation: {\r\n                        //     enabled: true,\r\n                        //     algorithm: 'lttb'\r\n                        // },\r\n                        annotation: {\r\n                            annotations: {\r\n                                line: {\r\n                                    type: 'line',\r\n                                    yMin: props.exact,\r\n                                    yMax: props.exact,\r\n                                    borderColor: 'rgba(0,0,0,0.8)',\r\n                                    borderWidth: 2,\r\n                                    borderDash: [10, 5],\r\n                                    label: {\r\n                                        content: `Exact value: ${PARAMS[props.mode.parameter].display(props.exact)}`,\r\n                                        enabled: true,\r\n                                        backgroundColor: 'rgba(0,0,0,0)',\r\n                                        color: 'black',\r\n                                        position: 'end',\r\n                                        yAdjust: 12\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        tooltip: {\r\n                            // position: 'customPositioner',\r\n                            callbacks: {\r\n                                label: (context) => {\r\n                                    return context.dataset.label + ': ' + PARAMS[props.mode.parameter].display(context.parsed.y)\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    interaction: {\r\n                        intersect: false,\r\n                        mode: 'index'\r\n                    },\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    animation: false,\r\n                    scales: {\r\n                        x: {\r\n                            display: false,\r\n                            type: 'timeseries',\r\n                            ticks: {\r\n                                maxTicksLimit: 5,\r\n                                maxRotation: 0,\r\n                            }\r\n                        },\r\n                        y: {\r\n                            ticks: {\r\n                                callback: (value) => PARAMS[props.mode.parameter].display(value),\r\n                                maxTicksLimit: 8\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart2","import './ChartWidget.scss';\r\nimport React from 'react';\r\nimport Widget from '../Widget';\r\nimport { Nav, Button, Form } from 'react-bootstrap';\r\nimport Chart from './Chart';\r\nimport { queryAllByAttribute } from '@testing-library/react';\r\nimport Chart2 from './Chart2';\r\n\r\nconst intervals = [\r\n    { val: 5, label: '5M' },\r\n    { val: 30, label: '30M' },\r\n    { val: 60, label: '1H' },\r\n    { val: 300, label: '5H' },\r\n    { val: 1440, label: '1D' },\r\n]\r\n\r\nconst widths = {\r\n    1: [100],\r\n    2: [100, 100],\r\n    3: [100, 50, 50],\r\n    4: [50, 50, 50, 50]\r\n}\r\n\r\n\r\nconst modes = [\r\n    // 'Dillution Of Precision': {\r\n    //     names: ['Vertical DOP', 'Horizontal DOP', 'Positional DOP'],\r\n    //     parameters: ['vdop', 'hdop', 'pdop'],\r\n    //     unit: ''\r\n    // },\r\n    {\r\n        name: 'Latitude',\r\n        parameter: 'lat',\r\n        unit: '°N',\r\n    },\r\n    {\r\n        name: 'Longitude',\r\n        parameter: 'lon',\r\n        unit: '°E',\r\n    },\r\n    {\r\n        name: 'Altitude',\r\n        parameter: 'alt',\r\n        unit: 'm',\r\n    },\r\n    {\r\n        name: 'Speed',\r\n        parameter: 'speed',\r\n        unit: 'm/s',\r\n        actual: 0\r\n    }\r\n]\r\n\r\nclass ChartWidget extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            charts: 1,\r\n            modeIndex: props.mode\r\n        }\r\n    }\r\n\r\n    toggleDual = () => {\r\n        this.setState({\r\n            dual: !this.state.dual\r\n        })\r\n    }\r\n\r\n    charts(q) {\r\n        return (\r\n            [1, 2, 3, 4].map(e =>\r\n                <Chart2\r\n                    key={`chart_${e}`}\r\n                    height={q > 1 ? '50%' : '100%'}\r\n                    width={`calc(${widths[q][e - 1]}% - 2px)`}\r\n                    style={{ float: 'left', display: e > this.state.charts ? 'none' : '' }}\r\n                    handleIntervalChange={this.handleIntervalChange}\r\n                    data={this.props.data}\r\n                />\r\n            )\r\n        )\r\n    }\r\n\r\n    mode() {\r\n        return modes[this.state.modeIndex]\r\n    }\r\n\r\n    exactValue = () => this.props.exactValues[this.mode().parameter]\r\n\r\n    render() {\r\n        return <Widget\r\n            widgetKey={this.props.widgetKey}\r\n            removeItem={this.props.removeItem}\r\n            // loaing={false}\r\n            loading={this.props.loading}\r\n            title={\r\n                <div className=\"ChartWidget\" style={{ height: '31px', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        Time Series ({this.mode().name})\r\n                    </div>\r\n\r\n                    {/* <Nav\r\n                        style={{ width: '100%' }}\r\n                        activeKey={this.props.intervalMinutes}\r\n                        onSelect={(value) => this.props.handleIntervalChange(value)}\r\n                        className=\"justify-content-center\"\r\n                    >\r\n                        {\r\n                            intervals.map(i =>\r\n                                <Nav.Item key={`interval_select_${i.val}`}>\r\n                                    <Nav.Link style={{ paddingTop: '5px' }} eventKey={i.val}>{i.label}</Nav.Link>\r\n                                </Nav.Item>\r\n                            )\r\n                        }\r\n                    </Nav> */}\r\n                    <Form.Select\r\n                        size='sm'\r\n                        onChange={e => { this.setState({ modeIndex: e.target.value }); this.forceUpdate(); }}\r\n                        style={{\r\n                            fontSize: '14px',\r\n                            width: '110px',\r\n                            // position: 'absolute',\r\n                            // right: '16px',\r\n                            // top: '21px',\r\n                            zIndex: 3\r\n                        }}\r\n                        value={this.state.modeIndex}\r\n                    >\r\n                        {\r\n                            modes.map((m, i) =>\r\n                                <option\r\n                                    key={`select_charts_${m.parameter}`}\r\n                                    value={i}\r\n                                >{m.name}</option>\r\n                            )\r\n                        }\r\n                    </Form.Select>\r\n                </div>\r\n            } style={{\r\n                width: this.props.width ? this.props.width : '100%',\r\n                height: this.props.height ? this.props.height : '100%',\r\n                float: 'left'\r\n            }}>\r\n            {/* \r\n            {\r\n                this.charts(this.state.charts)\r\n            } */}\r\n\r\n            <Chart2\r\n                // key={`chart_${e}`}\r\n                height={'100%'}\r\n                width={`calc(100% - 2px)`}\r\n                style={{ float: 'left' }}\r\n                handleIntervalChange={this.handleIntervalChange}\r\n                data={this.props.data}\r\n                mode={this.mode()}\r\n                exact={this.exactValue()}\r\n            />\r\n\r\n            {/* <Chart height={'100%'}\r\n                width={`calc(100% - 2px)`}\r\n                style={{ float: 'left' }}\r\n                handleIntervalChange={this.handleIntervalChange}\r\n                data={this.props.data}\r\n                mode={this.mode()}\r\n                exact={this.exactValue()}\r\n            /> */}\r\n\r\n        </Widget>\r\n    }\r\n}\r\n\r\nexport default ChartWidget;","import React from 'react';\r\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\r\nimport RadarWidget from '../../Widgets/RadarWidget/RadarWidget';\r\nimport StatusWidget from '../../Widgets/StatusWidget/StatusWidget';\r\nimport MapWidget from '../../Widgets/MapWidget/MapWidget';\r\nimport SatWidget from '../../Widgets/SatWidget/SatWidget';\r\n// import FeedWidget from '../../Widgets/FeedWidget/FeedWidget';\r\nimport ChartWidget from '../../Widgets/ChartWidget/ChartWidget';\r\n\r\nimport { BiLineChart, BiBarChart, BiTable, BiMap, BiTrash, BiRadar, BiExport } from 'react-icons/bi';\r\nimport _ from 'lodash';\r\nimport { Card } from 'react-bootstrap';\r\n// import {MdRadar} from 'react-icons/md';\r\n\r\nconst GridLayout = WidthProvider(Responsive);\r\n\r\nclass Analysis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            cols: 24,\r\n            widgetCounter: 0\r\n        }\r\n\r\n        this.removeItem = this.removeItem.bind(this)\r\n    }\r\n\r\n    getLayouts = () => ({\r\n        'lg': [\r\n            {\r\n                ...this.getWidget('Chart'), x: 0, y: 0, key: 'widget_0', component: (key) => <ChartWidget\r\n                    widgetKey={key}\r\n                    removeItem={this.removeItem}\r\n                    handleIntervalChange={this.handleIntervalChange}\r\n                    intervalMinutes={this.props.intervalMinutes}\r\n                    loading={this.props.loadingTimeseries}\r\n                    data={this.props.dataDisplayed}\r\n                    exactValues={this.exactValues()}\r\n                    mode={0}\r\n                />\r\n            },\r\n            { ...this.getWidget('Status'), x: 12, y: 0, key: 'widget_1' },\r\n            {\r\n                ...this.getWidget('Chart'), x: 0, y: 5, key: 'widget_5', component: (key) => <ChartWidget\r\n                    widgetKey={key}\r\n                    removeItem={this.removeItem}\r\n                    handleIntervalChange={this.handleIntervalChange}\r\n                    intervalMinutes={this.props.intervalMinutes}\r\n                    loading={this.props.loadingTimeseries}\r\n                    data={this.props.dataDisplayed}\r\n                    exactValues={this.exactValues()}\r\n                    mode={1}\r\n                />\r\n            },\r\n            { ...this.getWidget('Map'), x: 0, y: 6, key: 'widget_2' },\r\n            { ...this.getWidget('Radar'), x: 6, y: 6, key: 'widget_3' },\r\n            { ...this.getWidget('Signal'), x: 12, y: 12, key: 'widget_4' },\r\n        ]\r\n    })\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            items: this.getLayouts()['lg'],\r\n            widgetCounter: 6\r\n        })\r\n    }\r\n\r\n    handleIntervalChange(val) {\r\n        this.setState({\r\n            intervalMinutes: val\r\n        }, () => {\r\n            this.props.loadData(val)\r\n        })\r\n    }\r\n\r\n    exactValues = () => ({\r\n        alt: this.props.alt,\r\n        lat: this.props.lat,\r\n        lon: this.props.lon,\r\n        speed: 0\r\n    })\r\n\r\n    getWidgetAt = (x, y, w, h) => {\r\n        return _.filter(\r\n            this.state.items,\r\n            item =>\r\n                x + w > item.x &&\r\n                x < item.x + item.w &&\r\n                y + h >= item.y &&\r\n                y < item.y + item.h\r\n        ).sort(\r\n            (a, b) => (a.y < b.y && -1) || (a.y === b.y && a.x < b.x && -1) || 1\r\n        )[0]\r\n    }\r\n\r\n    placeItem = (x, y, w, h) => {\r\n        if (x + w > this.state.cols) {\r\n            return this.placeItem(0, y + 1, w, h)\r\n        }\r\n        else {\r\n            let widgetAtPos = this.getWidgetAt(x, y, w, h);\r\n            if (widgetAtPos)\r\n                return this.placeItem(widgetAtPos.x + widgetAtPos.w, y, w, h)\r\n            else\r\n                return { x: x, y: y }\r\n        }\r\n    }\r\n\r\n    mapWidget = (key) => <MapWidget widgetKey={key} removeItem={this.removeItem} position={[this.props.lat, this.props.lon]} navStates={this.props.navStates} />\r\n    statusWidget = (key) => <StatusWidget widgetKey={key} removeItem={this.removeItem} exactValues={this.exactValues()} status={this.props.navStates} data={this.props.dataSeparated} />\r\n    radarWidget = (key) => <RadarWidget widgetKey={key} removeItem={this.removeItem} navStates={this.props.navStates} />\r\n    satWidget = (key) => <SatWidget widgetKey={key} removeItem={this.removeItem} states={this.props.navStates} satellites={this.props.satellites} />\r\n    chartWidget = (key) => {\r\n        return <ChartWidget\r\n            widgetKey={key}\r\n            removeItem={this.removeItem}\r\n            handleIntervalChange={this.handleIntervalChange}\r\n            intervalMinutes={this.props.intervalMinutes}\r\n            loading={this.props.loadingTimeseries}\r\n            data={this.props.dataDisplayed}\r\n            exactValues={this.exactValues()}\r\n            mode={this.widgetCount('Chart') - 1}\r\n        />\r\n    }\r\n\r\n    getWidget = (widgetName) => ({\r\n        ...{\r\n            'Map': {\r\n                name: 'Map',\r\n                component: this.mapWidget,\r\n                w: 6,\r\n                h: 6,\r\n                minW: 4,\r\n                minH: 5\r\n            },\r\n            'Status': {\r\n                name: 'Status',\r\n                component: this.statusWidget,\r\n                w: 12,\r\n                h: 9,\r\n                minW: 10,\r\n                minH: 5\r\n            },\r\n            'Radar': {\r\n                name: 'Radar',\r\n                component: this.radarWidget,\r\n                w: 6,\r\n                h: 6,\r\n                minH: 5,\r\n                minW: 4\r\n            },\r\n            'Signal': {\r\n                name: 'Signal',\r\n                component: this.satWidget,\r\n                w: 12,\r\n                h: 7,\r\n                minH: 4,\r\n                minW: 6\r\n            },\r\n            'Chart': {\r\n                name: 'Chart',\r\n                component: this.chartWidget,\r\n                w: 12,\r\n                h: 5,\r\n                minW: 6,\r\n                minH: 5\r\n            }\r\n        }[widgetName], resizeHandles: ['se', 'sw']\r\n    })\r\n\r\n    addItem = (widgetName) => {\r\n        let widget = this.getWidget(widgetName)\r\n\r\n        this.setState(p => ({\r\n            items: [\r\n                ...p.items,\r\n                {\r\n                    ...widget,\r\n                    key: `widget_${p.widgetCounter}`,\r\n                    ...this.placeItem(0, 0, widget.w, widget.h)\r\n                }\r\n            ],\r\n            widgetCounter: p.widgetCounter + 1\r\n        }))\r\n    }\r\n\r\n    removeItem = (key) => {\r\n        this.setState({\r\n            items: this.state.items.filter(item => item.key !== key)\r\n        })\r\n    }\r\n\r\n    createElement = (item) => {\r\n        return <div\r\n            key={item.key}\r\n            data-grid={{ ...item }}\r\n        >\r\n            {item.component(item.key)}\r\n        </div>\r\n    }\r\n\r\n    handleToolbarClick = (name) => {\r\n        this.addItem(name, this.state.items)\r\n\r\n        // this.setState({\r\n        //     items: this.addItem(name, this.state.items)\r\n        // })\r\n    }\r\n\r\n    widgetCount = (widgetName) => this.state.items.filter(item => item.name === widgetName).length\r\n\r\n    render() {\r\n        return <div style={{ position: 'relative', width: '100%', height: '100%', minWidth: '600px' }}>\r\n            <div style={{ width: 'calc(100% - 100px)', float: 'left' }}>\r\n                <GridLayout\r\n                    style={{ zIndex: 10 }}\r\n                    draggableHandle='.grabbable'\r\n                    margin={[0, 0]}\r\n\r\n                    className=\"layout\"\r\n                    layouts={this.getLayouts()}\r\n                    cols={{ lg: 24, md: 24, sm: 12 }}\r\n                    breakpoints={{ lg: 1200, md: 996, sm: 768 }}\r\n\r\n                    rowHeight={52}\r\n                    width={1550}\r\n                >\r\n                    {\r\n                        this.state.items.map(\r\n                            item => this.createElement(item)\r\n                        )\r\n                    }\r\n                </GridLayout>\r\n            </div>\r\n            <div style={{\r\n                width: '100px',\r\n                right: '30px',\r\n                height: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                flexDirection: 'column',\r\n                // position: 'fixed',\r\n                float: 'left'\r\n            }}>\r\n                <Card style={{\r\n                    marginTop: '6px',\r\n                    width: '60px',\r\n                    height: '400px',\r\n                    borderWidth: '0px',\r\n                    padding: '10px',\r\n                    fontSize: '14px',\r\n                    boxShadow: '3px 3px 9px 2px rgba(0,0,0,0.05)',\r\n                    padding: '0px',\r\n                    display: 'flex',\r\n                    borderRadius: '7px',\r\n                    // justifyContent: 'space-evenly',\r\n                    overflow: 'hidden',\r\n                    zIndex: 11\r\n                }}>\r\n                    <div style={{ fontSize: '10px', height: '14px', backgroundColor: '#dde5ed', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    </div>\r\n                    {\r\n                        [\r\n                            { icon: <BiLineChart size={25} />, name: 'Chart' },\r\n                            { icon: <BiTable size={25} />, name: 'Status' },\r\n                            { icon: <BiMap size={25} />, name: 'Map' },\r\n                            { icon: <BiRadar size={25} />, name: 'Radar' },\r\n                            { icon: <BiBarChart size={25} />, name: 'Signal' }\r\n                        ].map((widget, i) =>\r\n                            <div\r\n                                onClick={e => this.handleToolbarClick(widget.name)}\r\n                                className='clickable darken'\r\n                                style={{\r\n                                    position: 'relative',\r\n                                    height: 'calc((100% - 14px)*0.2)',\r\n                                    width: '100%',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    zIndex: 10 - i,\r\n                                }}>\r\n                                <div style={{ display: 'block' }}>\r\n                                    {\r\n                                        widget.icon\r\n                                    }\r\n                                </div>\r\n                                <div style={{ display: 'block', fontSize: '10px' }}>\r\n                                    {widget.name.toUpperCase()}\r\n                                </div>\r\n                                <div style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center',\r\n                                    fontSize: '10px',\r\n                                    borderRadius: '50%',\r\n                                    backgroundColor: this.widgetCount(widget.name) > 0 ? '#75c8ff' : '#e0e0e0',\r\n                                    width: '14px',\r\n                                    height: '14px'\r\n                                }}>\r\n                                    {this.widgetCount(widget.name)}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Analysis;","import GPS from 'gps';\r\nimport _ from 'lodash';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Modal, Button, Form, ButtonToolbar, ButtonGroup, Alert, Spinner } from 'react-bootstrap';\r\nimport { defaultAlt, defaultPos } from './Dashboard';\r\n\r\nfunction Settings(props) {\r\n    const [lon, setLon] = useState(defaultPos[1])\r\n    const [lat, setLat] = useState(defaultPos[0])\r\n    const [alt, setAlt] = useState(defaultAlt)\r\n    const [useDefPos, setUseDefPos] = useState(true)\r\n\r\n    const [src, setSrc] = useState(null)\r\n\r\n    const [interval, setInterval] = useState(5)\r\n    const inputFile = useRef(null)\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const intervals = [\r\n        { val: 5, label: '5M' },\r\n        { val: 30, label: '30M' },\r\n        { val: 60, label: '1H' },\r\n        { val: 300, label: '5H' },\r\n        // { val: 1440, label: '1D' },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            setTimeout(() => {\r\n                // nmeaFromFile(src.content);\r\n\r\n                setLoading(false)\r\n                props.apply(true, lon, lat, alt, interval, src);\r\n            }, 100)\r\n        }\r\n    }, [loading])\r\n\r\n    const handleUseDefPosCheck = () => {\r\n        if (!useDefPos) {\r\n            setLon(defaultPos[1])\r\n            setLat(defaultPos[0])\r\n            setAlt(defaultAlt)\r\n        }\r\n        setUseDefPos(!useDefPos)\r\n    }\r\n\r\n    const handleFileClick = () => {\r\n        inputFile.current.click();\r\n    }\r\n\r\n    const onChangeFile = (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const reader = new FileReader()\r\n        reader.onload = event => {\r\n            let lines = event.target.result.split('\\n')\r\n\r\n            let errorIndex = _.chain(lines)\r\n                .map(line => {\r\n                    try {\r\n                        return GPS.Parse(line)\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        return false\r\n                    }\r\n                }).findIndex(v => !v).value()\r\n\r\n            if (errorIndex >= 0) {\r\n                setErrorMessage(`Faulty file: can't parse line ${errorIndex}: \"${lines[errorIndex]}\"`)\r\n                setSrc(null)\r\n            } else {\r\n                setErrorMessage('')\r\n                setSrc({\r\n                    content: lines,\r\n                    name: file.name\r\n                });\r\n            }\r\n        }\r\n        reader.onerror = error => {\r\n            console.error(error);\r\n            setErrorMessage(`Faulty file: can't read file\"`)\r\n            setSrc(null)\r\n        }\r\n\r\n\r\n        var file = event.target.files[0];\r\n        reader.readAsText(file)\r\n    }\r\n\r\n    const handleApplyClick = () => {\r\n        setLoading(true);\r\n\r\n\r\n        // props.apply(true, lon, lat, alt, interval, src);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            style={{ zIndex: 3001 }}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={() => props.apply(false)}\r\n            backdropClassName='modal-backdrop foreground'\r\n        >\r\n            <div style={{ padding: '10px' }}>\r\n                <Modal.Header closeButton style={{ borderWidth: '0px' }}>\r\n                    <h4>Settings</h4>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div style={{ width: '100%', minHeight: '50px', position: 'relative' }}>\r\n                        <div style={{ height: '40px', fontSize: '18px' }}>\r\n                            <b>Receiver position</b>\r\n                        </div>\r\n                        <div style={{ padding: '15px' }}>\r\n                            <Form.Check checked={useDefPos} onChange={handleUseDefPosCheck} type=\"switch\" label=\"Use default values\" style={{ lineHeight: '12px', fontSize: '14px' }} />\r\n\r\n                            <div style={{ width: '150px', display: 'inline-block', marginRight: '15px' }}>\r\n                                <Form.Text style={{\r\n                                    letterSpacing: '1px',\r\n                                    color: 'gray',\r\n                                    fontSize: '11px',\r\n                                }}>\r\n                                    Latitude\r\n                                </Form.Text>\r\n                                <Form.Control onChange={e => setLat(e.target.value)} disabled={useDefPos} type=\"number\" value={lat} />\r\n                            </div>\r\n                            <div\r\n                                style={{ width: '150px', display: 'inline-block', marginRight: '15px' }}>\r\n                                <Form.Text style={{\r\n                                    letterSpacing: '1px',\r\n                                    color: 'gray',\r\n                                    fontSize: '11px',\r\n                                }}>\r\n                                    Longitude\r\n                                </Form.Text>\r\n                                <Form.Control\r\n                                    onChange={e => setLon(e.target.value)}\r\n                                    disabled={useDefPos}\r\n                                    type=\"number\"\r\n                                    value={lon}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: '150px', display: 'inline-block' }}>\r\n                                <Form.Text style={{\r\n                                    letterSpacing: '1px',\r\n                                    color: 'gray',\r\n                                    fontSize: '11px',\r\n                                }}>\r\n                                    Altitude\r\n                                </Form.Text>\r\n                                <Form.Control onChange={e => setAlt(e.target.value)} disabled={useDefPos} type=\"number\" value={alt} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '50px', position: 'relative', marginTop: '40px' }}>\r\n                        <div style={{ height: '40px', fontSize: '18px' }}>\r\n                            <b>Timeframe</b>\r\n                        </div>\r\n                        <div style={{\r\n                            padding: '15px',\r\n                            fontSize: '16px',\r\n                            width: '100%',\r\n                        }}>\r\n                            {\r\n                                intervals.map(i =>\r\n                                    <div\r\n                                        onClick={() => setInterval(i.val)}\r\n                                        className='clickable lighten'\r\n                                        style={{\r\n                                            display: 'inline-block',\r\n                                            paddingLeft: '20px',\r\n                                            paddingRight: '20px',\r\n                                            color: interval === i.val ? 'black' : '#c0c0c0',\r\n                                        }}>\r\n                                        {i.label}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{ width: '100%', minHeight: '50px', position: 'relative', marginTop: '40px' }}>\r\n                        <div style={{ height: '40px', fontSize: '18px' }}>\r\n                            <b>Data Source</b>\r\n                        </div>\r\n                        <ButtonToolbar style={{ padding: '10px', marginLeft: '20px' }}>\r\n                            <ButtonGroup>\r\n                                <Button variant='outline-primary' active={!src} onClick={() => setSrc(false)}>Live Data</Button>\r\n                                <Button variant='outline-primary' active={src} onClick={handleFileClick}>NMEA File</Button>\r\n                            </ButtonGroup>\r\n                        </ButtonToolbar>\r\n                        <Alert\r\n                            variant={errorMessage ? 'danger' : 'info'}\r\n                            style={{\r\n                                visibility: errorMessage || src ? 'visible' : 'hidden',\r\n                                marginLeft: '30px',\r\n                                width: '500px',\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                textOverflow: 'ellipsis'\r\n                            }}>\r\n                            {\r\n                                src ? 'From file: ' + src.name : errorMessage ? errorMessage : ''\r\n                            }\r\n                        </Alert>\r\n                        <input accept=\".txt\" type='file' id='file' ref={inputFile} style={{ display: 'none' }} onChange={onChangeFile} />\r\n                    </div>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer style={{ borderWidth: '0px' }}>\r\n                    <Button onClick={handleApplyClick}>\r\n                        Apply Changes\r\n                        <Spinner style={{\r\n                            marginLeft: '10px',\r\n                            display: loading ? '' : 'none'\r\n                        }} size='sm' animation=\"border\" />\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport '../../../Leaflet.Edgemarker'\r\n// import moment from 'moment';\r\nimport { io } from \"socket.io-client\";\r\nimport { SERVER_URL } from '../GetData/GetData';\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route, withRouter } from 'react-router-dom';\r\nimport Messages from './Messages';\r\nimport SatelliteMap from './SatelliteMap';\r\nimport { CircleFlag as Flag } from 'react-circle-flags'\r\nimport { NavLink } from 'react-router-dom';\r\nimport FileStream from './FileStream';\r\nimport { IoSettingsSharp } from \"react-icons/io5\";\r\nimport { BiExport } from \"react-icons/bi\";\r\nimport Analysis from './Analysis';\r\nimport Settings from './Settings';\r\nimport { Card, Form, Spinner } from 'react-bootstrap';\r\n// import _ from 'lodash';\r\nimport _ from 'lodash-joins';\r\nimport Loadable from './../../Loadable';\r\n\r\nvar MINUTES = 5\r\nconst POINTS_PER = 500\r\n\r\nexport const N2YO_API_URL = 'https://api.n2yo.com/rest/v1/satellite/positions/25544/41.702/-76.014/0/2/&apiKey=WGNX43-R6MGYU-E6QSBP-4UWE'\r\nexport const N2YO_APIKEY = 'WGNX43-R6MGYU-E6QSBP-4UWE'\r\nexport const defaultPos = [48.160462, 17.130978]\r\nexport const defaultAlt = 135\r\n\r\nexport const GNSS_INFO = {\r\n    'GP': {\r\n        name: 'GPS',\r\n        color: '#ffcd45',\r\n        color_darker: '#e8af13',\r\n        color_lighter: '#f7de99',\r\n        flag: (style) => <Flag style={style} countryCode={'us'} height=\"14\" />\r\n    },\r\n    'GL': {\r\n        name: 'GLONASS',\r\n        color: '#ff6384',\r\n        color_darker: '#c43352',\r\n        color_lighter: '#f59fb1',\r\n        flag: (style) => <Flag style={style} countryCode={'ru'} height=\"14\" />\r\n    },\r\n    'GA': {\r\n        name: 'Galileo',\r\n        color: '#36a2eb',\r\n        color_darker: '#0c5485',\r\n        color_lighter: '#87c4ed',\r\n        flag: (style) => <Flag style={style} countryCode={'european_union'} height=\"14\" />\r\n    },\r\n    'GB': {\r\n        name: 'BeiDou',\r\n        color: '#9966ff',\r\n        color_darker: '#3e2078',\r\n        color_lighter: '#cab0ff',\r\n        flag: (style) => <Flag style={style} countryCode={'cn'} height=\"14\" />\r\n    }\r\n}\r\nexport const GNSS_INFO_LIST = Object.entries(GNSS_INFO).map(([k, v]) => ({ label: k, ...v }))\r\n\r\nexport const PARAMS = {\r\n    'lat': {\r\n        name: 'Latitude',\r\n        label: 'lat',\r\n        display: (v) => (v || v === 0) ? getDMS(v, 'lat') : 'N/A',\r\n        exta: true\r\n    },\r\n    'lon': {\r\n        name: 'Longitude',\r\n        label: 'lon',\r\n        display: (v) => (v || v === 0) ? getDMS(v, 'lon') : 'N/A',\r\n        exta: true\r\n    },\r\n    'alt': {\r\n        name: 'Altitude',\r\n        label: 'alt',\r\n        display: (v) => (v || v === 0) ? `${v.toFixed(2)}m` : 'N/A',\r\n        exta: true\r\n    },\r\n    'speed': {\r\n        name: 'Speed',\r\n        label: 'speed',\r\n        display: (v) => (v || v === 0) ? `${v.toFixed(2)}m/s` : 'N/A',\r\n        exta: true\r\n    },\r\n    'vdop': {\r\n        name: 'Vertical DOP',\r\n        label: 'vdop',\r\n        display: (v) => (v || v === 0) ? `${v}` : 'N/A'\r\n    },\r\n    'hdop': {\r\n        name: 'Horizontal DOP',\r\n        label: 'hdop',\r\n        display: (v) => (v || v === 0) ? `${v}` : 'N/A'\r\n    },\r\n    'pdop': {\r\n        name: 'Positional DOP',\r\n        label: 'pdop',\r\n        display: (v) => (v || v === 0) ? `${v}` : 'N/A'\r\n    }\r\n}\r\n\r\nexport const PARAMS_LIST = Object.entries(PARAMS).map(([k, v]) => ({ ...v }))\r\n\r\nfunction truncate(n) {\r\n    return n > 0 ? Math.floor(n) : Math.ceil(n);\r\n}\r\n\r\nfunction getDMS(dd, longOrLat) {\r\n    let hemisphere = /^[WE]|(?:lon)/i.test(longOrLat)\r\n        ? dd < 0\r\n            ? \"W\"\r\n            : \"E\"\r\n        : dd < 0\r\n            ? \"S\"\r\n            : \"N\";\r\n\r\n    const absDD = Math.abs(dd);\r\n    const degrees = truncate(absDD);\r\n    const minutes = truncate((absDD - degrees) * 60);\r\n    const seconds = ((absDD - degrees - minutes / 60) * Math.pow(60, 2)).toFixed(2);\r\n\r\n    let dmsArray = [degrees, minutes, seconds, hemisphere];\r\n    return `${dmsArray[0]}°${dmsArray[1]}'${dmsArray[2]}\" ${dmsArray[3]}`;\r\n}\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.componentCleanup = this.componentCleanup.bind(this);\r\n        this.state = {\r\n            messageBatch: [],\r\n            nmeaFeed: [],\r\n            dataAll: [],\r\n            dataDisplayed: [],\r\n            inputStream: null,\r\n            socket: null,\r\n            loadingTimeseries: false,\r\n            loadingPage: false,\r\n            usedSystems: ['GP'],\r\n            navStates: [],\r\n            satellites: [],\r\n            settingsOpen: false,\r\n\r\n            lon: defaultPos[1],\r\n            lat: defaultPos[0],\r\n            alt: defaultAlt,\r\n            intervalMinutes: MINUTES,\r\n            // src: \"C:/Users/TomášBedej/Desktop/DP/Kod/ns-frontend/public/data/nmea_2022-04-19T06_00_00.000Z-2022-04-19T06_30_00.000Z.txt\",\r\n            src: null,\r\n            second: 0,\r\n            duration: 0\r\n        };\r\n        this.filterOldStates = this.filterOldStates.bind(this)\r\n        this.handleIntervalChange = this.handleIntervalChange.bind(this)\r\n        this.loadData = this.loadData.bind(this)\r\n        this.reduceDensity = this.reduceDensity.bind(this)\r\n        this.updateData = this.updateData.bind(this)\r\n        this.updateDataFile = this.updateDataFile.bind(this)\r\n        this.handleSettingsChange = this.handleSettingsChange.bind(this)\r\n        // this.fileStream = this.fileStream.bind(this)\r\n        this.resetDashboard = this.resetDashboard.bind(this)\r\n        this.setLoadingTimeseries = this.setLoadingTimeseries.bind(this)\r\n        this.setLoadingPage = this.setLoadingPage.bind(this)\r\n        this.handleExport = this.handleExport.bind(this)\r\n    }\r\n\r\n    setLoadingTimeseries = (loading) => {\r\n        this.setState({ loadingTimeseries: loading })\r\n    }\r\n\r\n    setLoadingPage = (loading) => {\r\n        this.setState({ loadingPage: loading, loadingTimeseries: loading })\r\n    }\r\n\r\n    reduceDensity(index, c) {\r\n        // var diffMs = (new Date() - new Date(array[0].time)); \r\n        // var diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000);\r\n\r\n        // let c = Math.round(array.length / 500)\r\n        // let c = Math.round(this.state.intervalMinutes * 3)\r\n        if (!c) return true\r\n        if (index % c === 0)\r\n            return true\r\n        return false\r\n    }\r\n\r\n    resetDashboard() {\r\n        this.setState({\r\n            messageBatch: [],\r\n            dataDisplayed: [],\r\n            navStates: []\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let obj = {\r\n        //     a: [{time:1}, {time:2}],\r\n        //     b: [{time:1}, {time:4}],\r\n        //     c: [{time:1}, {time:3}],\r\n        // }\r\n\r\n        // console.log(_.groupBy(obj, e => e.time))\r\n\r\n        window.addEventListener('beforeunload', this.componentCleanup);\r\n\r\n        this.loadData(MINUTES, () => {\r\n            this.streamFromServer()\r\n        })\r\n        // this.streamFromServer()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.componentCleanup();\r\n        window.removeEventListener('beforeunload', this.componentCleanup);\r\n    }\r\n\r\n    componentCleanup() {\r\n        this.state.socket && this.state.socket.close()\r\n        clearInterval(this.state.inputStream)\r\n    }\r\n\r\n    filterMessages(nmea) {\r\n        if (nmea.slice(3, 4) === 'G')\r\n            return true\r\n        return false\r\n    }\r\n\r\n    filterOldStates(e, curr) {\r\n        curr = curr || new Date()\r\n\r\n        if ((curr) - new Date(e.time) < 1000 * 60 * this.state.intervalMinutes)\r\n            return true\r\n        return false\r\n    }\r\n\r\n    streamFromServer() {\r\n        this.setState({\r\n            socket: io(`${SERVER_URL}`, {\r\n                reconnectionDelayMax: 10000\r\n            })\r\n        }, () => {\r\n            this.state.socket.on(\"message\", data => {\r\n                this.updateData(data)\r\n            })\r\n        })\r\n    }\r\n\r\n    gnssIsUsed = (gnss) => this.state.usedSystems.includes(gnss)\r\n\r\n    getStandardDeviation = (mean, values) => Math.sqrt(\r\n        values\r\n            .map(x => Math.pow(x - mean, 2))\r\n            .reduce((a, b) => a + b, 0) / values.length\r\n    )\r\n\r\n    processStates(states, data) {\r\n        return states.map((state) => {\r\n            _.forEach(['lat', 'lon', 'alt', 'speed'], (attribute) => {\r\n                let values = data[state.gnss_type].map(e => e[attribute]).filter(v => v)\r\n                let sum = _.sum(values)\r\n                let mean = sum / values.length\r\n\r\n                state[attribute + '_mean'] = values.length ? mean : undefined\r\n                state[attribute + '_std'] = values.length ? this.getStandardDeviation(mean, values) : undefined\r\n            })\r\n\r\n            return state\r\n        })\r\n    }\r\n\r\n    updateData(data) {\r\n        if (this.state.src) {\r\n            return\r\n        }\r\n\r\n        this.setState(prevState => {\r\n            // let missing = POINTS_PER - this.state.dataDisplayed.length - deleted\r\n            // let every_xth = missing > 0 ? Math.floor(BATCH_SIZE / missing) : 0\r\n\r\n            // remove data out of displayed timeframe\r\n            let deleted = prevState.dataDisplayed['GP'].findIndex(this.filterOldStates)\r\n            let updatedData = prevState.dataDisplayed\r\n            _.forEach(data.states, (state) => {\r\n                updatedData[state.gnss_type] = [...updatedData[state.gnss_type], state].slice(deleted)\r\n            })\r\n\r\n            return {\r\n                messageBatch: data.messages,\r\n                nmeaFeed: prevState.nmeaFeed.concat(data.messages).slice(-500),\r\n                navStates: this.processStates(data.states, updatedData),\r\n                dataDisplayed: updatedData,\r\n                satellites: data.satellites\r\n            }\r\n        })\r\n    }\r\n\r\n    refreshData() {\r\n        this.setState({\r\n            navStates: this.state.navStates,\r\n            dataDisplayed: this.state.dataDisplayed\r\n        })\r\n    }\r\n\r\n    clearData() {\r\n        this.setState(prevState => {\r\n            let deleted = prevState.dataDisplayed['GP'].findIndex(this.filterOldStates)\r\n\r\n            let updatedData = prevState.dataDisplayed\r\n            _.forEach(prevState.navStates, (state) => {\r\n                updatedData[state.gnss_type] = updatedData[state.gnss_type].slice(deleted)\r\n            })\r\n\r\n            return {\r\n                dataDisplayed: { 'GP': [], 'GA': [], 'GB': [], 'GL': [] },\r\n                navStates: []\r\n            }\r\n        })\r\n    }\r\n\r\n    categorizedStates = (states) => states ? states.reduce((prev, state) => {\r\n        return {\r\n            ...prev,\r\n            [state.gnss_type]: prev[state.gnss_type] ? [...prev[state.gnss_type], state] : [state]\r\n        }\r\n    }, {}) : {\r\n        'GP': [],\r\n        'GL': [],\r\n        'GA': [],\r\n        'GB': []\r\n    }\r\n\r\n    loadData(minutes, cb) {\r\n        this.setState({\r\n            loadingTimeseries: true\r\n        }, () => {\r\n            axios.get(`${SERVER_URL}/live/${minutes}`).then(res => {\r\n                let every_xth = Math.floor(res.data.length / 4 / POINTS_PER)\r\n                this.setState({\r\n                    dataDisplayed: this.categorizedStates(res.data),\r\n                    // dataDisplayed: res.data.filter((_, i) => this.reduceDensity(i, every_xth)),\r\n                    // navStates: [{}, {}, {}, {}],\r\n                    loadingTimeseries: false\r\n                }, cb)\r\n            }).catch(err => {\r\n                console.error('Error getting history data:', err)\r\n            })\r\n        })\r\n    }\r\n\r\n    updateDataFile(data, dataDisplayed, second, duration, start) {\r\n        this.setState(prevState => {\r\n            let deleted = dataDisplayed['GP'].findIndex(e => this.filterOldStates(e, new Date(start.getTime() + second * 1000)))\r\n\r\n            let updatedData = dataDisplayed\r\n            _.forEach(data.states, (state) => {\r\n                updatedData[state.gnss_type] = [...updatedData[state.gnss_type], state].slice(deleted)\r\n            })\r\n\r\n            return {\r\n                messageBatch: data.messages,\r\n                nmeaFeed: prevState.nmeaFeed.concat(data.messages).slice(-500),\r\n                navStates: data.states,\r\n                dataDisplayed: updatedData,\r\n                satellites: [],\r\n                second: second,\r\n                duration: duration,\r\n                // loadingTimeseries: false\r\n            }\r\n        })\r\n    }\r\n\r\n    formatDataStream(data) {\r\n        return data.reduce((p, c) => {\r\n            return {\r\n                ...p,\r\n                [c.gnss_type]: p[c.gnss_type] ? [...p[c.gnss_type], c] : [c]\r\n            }\r\n        }, {})\r\n    }\r\n\r\n    handleIntervalChange(val) {\r\n        this.setState({\r\n            intervalMinutes: val\r\n        }, () => {\r\n            if (!this.state.src)\r\n                this.loadData(val)\r\n            else {\r\n                this.refreshData(val)\r\n            }\r\n            // this.clearData()\r\n        })\r\n    }\r\n\r\n    handleSettingsChange(changes, lon, lat, alt, tf, src) {\r\n        if (!changes) {\r\n            this.setState({\r\n                settingsOpen: false\r\n            })\r\n            return\r\n        }\r\n        this.setState(() => ({ loadingSettings: true }),\r\n            () => {\r\n                if (src !== this.state.src) {\r\n                    !src && this.clearData();\r\n                }\r\n                this.handleIntervalChange(tf);\r\n\r\n                this.setState({\r\n                    settingsOpen: false,\r\n                    lon: lon,\r\n                    lat: lat,\r\n                    alt: alt,\r\n                    src: src,\r\n                    loadingSettings: false\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    handleExport() {\r\n\r\n        let columns = [\r\n            { name: 'time', value: (v) => v.time.getTime() },\r\n            'gnss_type',\r\n            'lat', 'lat_mean', 'lat_std',\r\n            'lon', 'lon_mean', 'lon_std',\r\n            'alt', 'alt_mean', 'alt_std',\r\n            'speed', 'speed_mean', 'speed_std',\r\n            'fix',\r\n            'hdop', 'pdop', 'vdop',\r\n            { name: 'satsActive', value: (s) => s.satsActive.length },\r\n            { name: 'satsVisible', value: (s) => s.satsVisible.length }\r\n        ].map(column => typeof (column) === 'string' ? ({ name: column, value: (v) => v[column] }) : column)\r\n\r\n        let csv = columns.map(col => col.name).join(',') + '\\n' + _.chain(_.values(this.state.dataDisplayed))\r\n            .flatten()\r\n            .sortBy(['time', 'gnss_type'])\r\n            .map(state =>\r\n                columns.map(\r\n                    column => column.value(state)\r\n                ).join(',')\r\n            )\r\n            .value().join('\\n')\r\n\r\n\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csv));\r\n        element.setAttribute('download', 'values.csv');\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    render() {\r\n        const activeNavStyle = { backgroundColor: '#292936', color: 'white' }\r\n        const defaultNavStyle = {\r\n            fontSize: '12px',\r\n            lineHeight: '20px',\r\n            display: 'inline-block',\r\n            height: '100%',\r\n            width: '100px'\r\n        }\r\n\r\n        return <div className=\"page\" style={{ position: 'relative' }}>\r\n\r\n            <div style={{\r\n                display: 'flex',\r\n                width: '100%',\r\n                height: '100%',\r\n                position: 'absolute',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                animation: this.state.loadingPage ? '' : 'fadeOut ease 0.4s forwards',\r\n                zIndex: 2000\r\n            }}>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        width: '100%',\r\n                        height: '100%',\r\n                        backgroundColor: '#f5f5fc',\r\n                        opacity: 1,\r\n                        borderRadius: '7px'\r\n                    }}\r\n                />\r\n                <Spinner\r\n                    style={{ marginRight: '310px' }}\r\n                    size='lg'\r\n                    as=\"span\"\r\n                    animation=\"border\"\r\n                    role=\"status\"\r\n                    aria-hidden=\"true\"\r\n                />\r\n            </div>\r\n\r\n            <div id='dashboard-header' style={{ zIndex: 2001, width: '100%', marginBottom: '32px', minWidth: '710px', position: 'relative', minHeight: '40px' }}>\r\n                <div\r\n                    className='main-content'\r\n                    style={{\r\n                        gap: '10px',\r\n                        paddingLeft: '30px',\r\n                        height: '100%',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        flexWrap: 'wrap',\r\n                        position: 'relative'\r\n                    }}>\r\n                    <h2 style={{\r\n                        width: '200px',\r\n                        marginBottom: '0px'\r\n                    }}>\r\n                        Dashboard\r\n                    </h2>\r\n                    <NavLink exact to=\"/dashboard\" onClick={() => { this.refreshData() }} className=\"btn btn-pill\" style={\r\n                        isActive => isActive ? { ...defaultNavStyle, ...activeNavStyle } : defaultNavStyle\r\n                    }>\r\n                        Analysis\r\n                    </NavLink>\r\n                    <NavLink to=\"/dashboard/messages\" className=\"btn btn-pill\" style={\r\n                        isActive => isActive ? { ...defaultNavStyle, ...activeNavStyle } : defaultNavStyle\r\n                    }>\r\n                        Messages\r\n                    </NavLink>\r\n                    <NavLink to=\"/dashboard/map\" className=\"btn btn-pill\" style={\r\n                        isActive => isActive ? { ...defaultNavStyle, ...activeNavStyle } : defaultNavStyle\r\n                    }>\r\n                        Satellite Map\r\n                    </NavLink>\r\n                    {/* <div style={{ flexBasis: '100%', width: '0' }} /> */}\r\n                    <div style={{ margin: 'auto' }}></div>\r\n\r\n                    <div style={{ float: 'left', width: '530px', height: '40px', display: 'inline-block' }}>\r\n                        {\r\n                            this.state.src ?\r\n                                <FileStream\r\n                                    setLoadingPage={this.setLoadingPage}\r\n                                    updateData={this.updateDataFile}\r\n                                    src={this.state.src}\r\n                                />\r\n                                : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='right-gutter' style={{ height: '40px', display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\r\n                    <BiExport\r\n                        className=\"clickable lightenOpacity\"\r\n                        size={23}\r\n                        style={{ marginBottom: '2px', marginLeft: '10px' }}\r\n                        onClick={this.handleExport}\r\n                    />\r\n                    <IoSettingsSharp\r\n                        id='settings-cog'\r\n                        onClick={() => this.setState({ settingsOpen: true })}\r\n                        className=\"clickable lightenOpacity\"\r\n                        size={20}\r\n                        style={{ marginRight: '30px' }}\r\n                    />\r\n                </div>\r\n                <Settings loadingSettings={this.state.loadingSettings} resetDashboard={this.resetDashboard} apply={this.handleSettingsChange} show={this.state.settingsOpen} />\r\n            </div>\r\n\r\n            <Switch>\r\n                <Route path=\"/dashboard/messages\">\r\n                    <Messages loadingPage={this.state.loadingPage} messages={this.state.messageBatch} />\r\n                </Route>\r\n                <Route path=\"/dashboard/map\">\r\n                    <SatelliteMap src={this.state.src} loadingPage={this.state.loadingPage} satellites={this.state.satellites} navStates={this.state.navStates} />\r\n                </Route>\r\n                <Route path=\"/dashboard\">\r\n                    <Analysis {...this.state} />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n\r\n{/* <Loadable color={'#f5f5fc'} opacity={1} loading={this.state.loadingPage}></Loadable> */ }","import React from 'react';\r\nimport Page from '../Page';\r\n\r\nclass About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div style={{ width: '900px', margin: 'auto', marginTop: '50px', marginBottom: '50px', padding: '50px 100px 100px 100px', backgroundColor: 'white', borderRadius: '7px' }}>\r\n            <h2 className='mb-5'>About NavSuite</h2>\r\n\r\n\r\n            NavSuite is a Masters project, that was created as a distance education solution for\r\n            satellite navigation systems. Built as a GNSS remote laboratory, this system allows students\r\n            of FIIT STU and other users to explore, analyze and obtain data in the field of navigation\r\n            systems.\r\n            <br />\r\n            This system uses data acquired by 4 GNSS receivers situated at the roof of the FIIT building\r\n            in Bratislava, Slovakia. Each of these receivers is configured to listen to 1 of the 4 main\r\n            GNSS in the Earth's Medium Earth Orbit - United States' Global Positioning System,\r\n            Europe's Galileo, Russia's GLONASS and China's BeiDou system.\r\n            <br />\r\n            We set out to allow our users to compare the positioning data provided by each of these\r\n            systems without having to own a set of receivers themselves. By having this system be available\r\n            over the internet as a web application, students of FIIT's Satellite Navigation course can work\r\n            in the same environment, whether it be on school premises or at home.\r\n\r\n            <h4 style={{ marginTop: '60px' }}>System Diagram</h4>\r\n            <img\r\n                alt=\"diagram\"\r\n                src='./system_diagram.drawio.svg'\r\n                width='700px'\r\n                style={{ marginTop: '40px' }}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nclass Animated extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => { this.setState({ loaded: true }) }, this.props.delay * 1000)\r\n    }\r\n\r\n    render() {\r\n        let enterDuration = this.props.enterDuration ? this.props.enterDuration : 800\r\n\r\n        return this.state.loaded ? <div style={{\r\n            animation: `${this.props.animation ? this.props.animation : 'fadeIn'} linear ${ (this.props.enterDuration ? this.props.enterDuration : 800) / 1000}s`\r\n        }}>\r\n            {this.props.children}\r\n        </div> : null\r\n    }\r\n\r\n}\r\n\r\nexport default Animated;","import React from 'react';\r\nimport { Button, Fade } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Animated from '../../Animated';\r\nimport Page from '../Page'\r\n\r\nclass Landing extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            animation: 0\r\n        }\r\n    }\r\n\r\n\r\n    animate = (...delays) => {\r\n        delays.reduce((p, x) => p\r\n            .then(_ => this.delay(x)),\r\n            Promise.resolve()\r\n        )\r\n    }\r\n\r\n    delay(duration) {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                this.setState({ animation: this.state.animation + 1 })\r\n                return resolve()\r\n            }, duration * 1000);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.animate(0.2, 0.2, 0.7, 0.2)\r\n    }\r\n\r\n    loaded = (step) => this.state.animation >= step ? true : false\r\n\r\n    render() {\r\n        return <div className=\"page\" style={{ overflowX: 'hidden' }}>\r\n            <div style={{ width: '100%', marginBottom: '100px', height: '600px' }}>\r\n                <div style={{ width: '50%', fontSize: '20px', marginTop: '40px', float: 'left' }}>\r\n                    <Animated delay={0.5}>\r\n                        <h1\r\n                            style={{\r\n                                fontSize: '90px',\r\n                                marginTop: '200px',\r\n                                marginBottom: '40px'\r\n                            }}>\r\n                            NavSuite\r\n                        </h1>\r\n                    </Animated>\r\n                    <Animated delay={0.6}>\r\n                        <span>\r\n                            Welcome to NavSuite! The <b>FIIT Remote Laboratory</b> for the analysis and comparison of data acquired from the Global Navigation Satellite Systems - <b>GPS</b>, <b>GLONASS</b>, <b>Galileo</b> and <b>BeiDou</b>.\r\n                        </span>\r\n                    </Animated>\r\n                </div>\r\n\r\n                <Animated delay={1.5} animation='fadeInLeft'>\r\n                    <div style={{ width: '50%', float: 'right', display: 'flex', justifyContent: 'center', marginTop: '160px' }}>\r\n                        <img src=\"./images/Galileo_satellite.png\" width=\"450px\" style={{\r\n                            margin: 'auto',\r\n                            animation: 'shiver 7.5s ease-in-out infinite',\r\n                            animationDelay: '-0.5s'\r\n                        }} />\r\n                    </div>\r\n                </Animated>\r\n                <Animated delay={2} animation='fadeInRight'>\r\n                    <div style={{ width: '50%', float: 'right', display: 'flex', justifyContent: 'center', marginTop: '60px' }}>\r\n                        <img src=\"./images/BeiDou_satellite.png\" width=\"500px\" style={{\r\n                            margin: 'auto',\r\n                            animation: 'shiver 7.5s ease-in-out infinite'\r\n                        }} />\r\n                    </div>\r\n                </Animated>\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'center' }}>\r\n\r\n                <Animated delay={0.6}>\r\n                    <NavLink to=\"/dashboard\">\r\n                        <Button style={{ width: '200px', height: '60px' }}>ANALYZE DATA</Button>\r\n                    </NavLink>\r\n                </Animated>\r\n            </div>\r\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'center', marginTop:'5px' }}>\r\n\r\n                <Animated delay={2.1}>\r\n                    <NavLink to=\"/about\">\r\n                        <Button variant='link' style={{ width: '200px', lineHeight:'30px', textDecoration:'none !important' }}>Learn more</Button>\r\n                    </NavLink>\r\n                </Animated>\r\n            </div>\r\n\r\n            {/* <img src=\"./images/GLONASS_satellite.png\" width=\"300px\" style={{ position: 'absolute', left: '20%', bottom: '60px' }} /> */}\r\n            {/* <img src=\"./images/GPS_satellite.png\" width=\"300px\" style={{ position: 'absolute', right: '10%', bottom: '60px' }} /> */}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Landing;\r\n","import './App.scss';\nimport NavBar from './components/NavBar/NavBar';\nimport './customTheme.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Dashboard from './components/Pages/Dashboard/Dashboard';\nimport GetData from './components/Pages/GetData/GetData';\nimport About from './components/Pages/About/About';\nimport Landing from './components/Pages/Landing/Landing';\nimport Animated from './components/Animated';\nimport { useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/test').then(res => {\n      console.log(res)\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div style={{\n          width: '200px',\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          height: '100vh',\n          // display: 'flex',\n          // alignItems: 'center',\n          // marginLeft:'10px',\n          zIndex: 9999\n        }}>\n          <NavBar />\n        </div>\n        <div style={{ marginLeft: '180px', overflow: 'hidden' }}>\n          <Switch>\n            <Route path=\"/data\">\n              <Animated delay={0} enterDuration={350}>\n                <GetData />\n              </Animated>\n            </Route>\n            <Route path=\"/about\">\n              <Animated delay={0} enterDuration={350}>\n                <About />\n              </Animated>\n            </Route>\n            <Route path=\"/dashboard\">\n              <Animated delay={0} enterDuration={350}>\n                <Dashboard />\n              </Animated>\n            </Route>\n            <Route path=\"/\">\n              <Landing />\n            </Route>\n            {/* <Route path=\"/\">\n          </Route> */}\n          </Switch>\n        </div>\n      </Router>\n      {/* <div style={{ width: '100%', height: '100px', backgroundColor: '#1c1c1c', marginTop: '100px' }}></div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'react-virtualized/styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}